.TH "D:/gitt/MicrochipFor32/bsp_Device/varint.h" 3 "2022年 十一月 22日 星期二" "Version 2.0.0" "MF32BSP_XerolySkinner" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/gitt/MicrochipFor32/bsp_Device/varint.h
.SH SYNOPSIS
.br
.PP
\fC#include 'stdint\&.h'\fP
.br

.SS "类型定义"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBu8\fP"
.br
.RI "8位无符号数类型 "
.ti -1c
.RI "typedef uint16_t \fBu16\fP"
.br
.RI "16位无符号数类型 "
.ti -1c
.RI "typedef uint32_t \fBu32\fP"
.br
.RI "32位无符号数类型 "
.ti -1c
.RI "typedef uint64_t \fBu64\fP"
.br
.RI "64位无符号数类型 "
.ti -1c
.RI "typedef int8_t \fBi8\fP"
.br
.RI "8位有符号数类型 "
.ti -1c
.RI "typedef int16_t \fBi16\fP"
.br
.RI "16位有符号数类型 "
.ti -1c
.RI "typedef int32_t \fBi32\fP"
.br
.RI "32位有符号数类型 "
.ti -1c
.RI "typedef int64_t \fBi64\fP"
.br
.RI "64位有符号数类型 "
.ti -1c
.RI "typedef volatile \fBu8\fP \fBvu8\fP"
.br
.RI "8位无符号易变类型 "
.ti -1c
.RI "typedef volatile \fBu16\fP \fBvu16\fP"
.br
.RI "16位无符号易变类型 "
.ti -1c
.RI "typedef volatile \fBu32\fP \fBvu32\fP"
.br
.RI "32位无符号易变类型 "
.ti -1c
.RI "typedef volatile \fBu64\fP \fBvu64\fP"
.br
.RI "64位无符号易变类型 "
.ti -1c
.RI "typedef volatile \fBi8\fP \fBvi8\fP"
.br
.RI "8位有符号易变类型 "
.ti -1c
.RI "typedef volatile \fBi16\fP \fBvi16\fP"
.br
.RI "16位有符号易变类型 "
.ti -1c
.RI "typedef volatile \fBi32\fP \fBvi32\fP"
.br
.RI "32位有符号易变类型 "
.ti -1c
.RI "typedef volatile \fBi64\fP \fBvi64\fP"
.br
.RI "64位有符号易变类型 "
.in -1c
.SH "类型定义说明"
.PP 
.SS "typedef int16_t \fBi16\fP"

.PP
16位有符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB46\fP 行定义\&.
.SS "typedef int32_t \fBi32\fP"

.PP
32位有符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB47\fP 行定义\&.
.SS "typedef int64_t \fBi64\fP"

.PP
64位有符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB48\fP 行定义\&.
.SS "typedef int8_t \fBi8\fP"

.PP
8位有符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB45\fP 行定义\&.
.SS "typedef uint16_t \fBu16\fP"

.PP
16位无符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB41\fP 行定义\&.
.SS "typedef uint32_t \fBu32\fP"

.PP
32位无符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB42\fP 行定义\&.
.SS "typedef uint64_t \fBu64\fP"

.PP
64位无符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB43\fP 行定义\&.
.SS "typedef uint8_t \fBu8\fP"

.PP
8位无符号数类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB40\fP 行定义\&.
.SS "typedef volatile \fBi16\fP \fBvi16\fP"

.PP
16位有符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB56\fP 行定义\&.
.SS "typedef volatile \fBi32\fP \fBvi32\fP"

.PP
32位有符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB57\fP 行定义\&.
.SS "typedef volatile \fBi64\fP \fBvi64\fP"

.PP
64位有符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB58\fP 行定义\&.
.SS "typedef volatile \fBi8\fP \fBvi8\fP"

.PP
8位有符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB55\fP 行定义\&.
.SS "typedef volatile \fBu16\fP \fBvu16\fP"

.PP
16位无符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB51\fP 行定义\&.
.SS "typedef volatile \fBu32\fP \fBvu32\fP"

.PP
32位无符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB52\fP 行定义\&.
.SS "typedef volatile \fBu64\fP \fBvu64\fP"

.PP
64位无符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB53\fP 行定义\&.
.SS "typedef volatile \fBu8\fP \fBvu8\fP"

.PP
8位无符号易变类型 
.PP
在文件 \fBvarint\&.h\fP 第 \fB50\fP 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 MF32BSP_XerolySkinner 的 源代码自动生成\&.
