<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_t_l___queue_8cpp_source" xml:lang="zh">
<title>STL_Queue.cpp</title>
<indexterm><primary>D:/gitt/MicrochipFor32/STL_Device/STL_Queue.cpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="__s_t_l___queue_8cpp_source_1l00001"/>00001 <emphasis role="comment">/*----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;#&#32;&#32;Copyright&#32;(c)&#32;2022&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00004"/>00004 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00005"/>00005 <emphasis role="comment">&#32;#&#32;&#32;本软件按原样提供,无任何明示或暗示</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00006"/>00006 <emphasis role="comment">&#32;#&#32;&#32;在任何情况下,作者都不承担任何损害赔偿责任</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00007"/>00007 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00008"/>00008 <emphasis role="comment">&#32;#&#32;&#32;使用的许可声明:</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00009"/>00009 <emphasis role="comment">&#32;#&#32;&#32;1.&#32;&#32;不得歪曲本软件的来源,你不能声称你编写了原始软件.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00010"/>00010 <emphasis role="comment">&#32;#&#32;&#32;2.&#32;&#32;免费授予以任何目的,前提是版权声明出现在所有副本中.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00011"/>00011 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;并且版权声明和许可声明同时出现.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00012"/>00012 <emphasis role="comment">&#32;#&#32;&#32;3.&#32;&#32;你有使用,复制,修改,分发,和销售本软件的许可.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00013"/>00013 <emphasis role="comment">&#32;#&#32;&#32;4.&#32;&#32;如果你在产品中使用,产品文档中的声明是赞赏的但不是必须的.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00014"/>00014 <emphasis role="comment">&#32;#&#32;&#32;5.&#32;&#32;本通知不得从任何来源删除或更改.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00015"/>00015 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00016"/>00016 <emphasis role="comment">&#32;#&#32;&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00017"/>00017 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;E-mail:zabbcccbbaz@163.com</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00018"/>00018 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;QQ:2715099320</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00019"/>00019 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;Mobile&#32;Phone:13005636215</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00020"/>00020 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00021"/>00021 <emphasis role="comment">&#32;#&#32;&#32;All&#32;rights&#32;reserved.</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00022"/>00022 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00023"/>00023 
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00035"/>00035 &#32;&#32;<emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00036"/>00036 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;头文件</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__s_t_l___queue_8h">STL_Queue.h</link>&quot;</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00039"/>00039 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;&#32;构造函数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00041"/><link linkend="_class_s_t_l__r_queue_1aa590a265ee2309e6150adcdf377f32b6">00041</link> <link linkend="_class_s_t_l__r_queue_1aa590a265ee2309e6150adcdf377f32b6">STL_rQueue::STL_rQueue</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a42636190858b2aa8bdf93b80f2e3ed33">room</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;NULL;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00045"/>00045 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00046"/><link linkend="_class_s_t_l__r_queue_1a96e6153133db180421c9321fb6ee83a8">00046</link> <link linkend="_class_s_t_l__r_queue_1a96e6153133db180421c9321fb6ee83a8">STL_rQueue::~STL_rQueue</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;free(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>);}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00049"/>00049 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00050"/>00050 <emphasis role="comment">//&#32;&#32;成员函数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00056"/><link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">00056</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">STL_rQueue::push</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存分配前的数据头</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;temp_stacks&#32;=&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若所需空间小于现有空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;&gt;=&#32;<link linkend="_class_s_t_l__r_queue_1a42636190858b2aa8bdf93b80f2e3ed33">room</link>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配新长度</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*<emphasis role="keyword">&gt;</emphasis>(realloc(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>,&#32;++<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配失败,善后并且返回错误</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;==&#32;NULL)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复原长度</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;temp_stacks;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复数据</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a3df7082063e14f0ae068a2feb3e4a03d">QUEUES_REAL_ERROR</link>;}&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回错误</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a42636190858b2aa8bdf93b80f2e3ed33">room</link>&#32;=&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配成功,压入数据</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;-&#32;1]&#32;=&#32;var;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回正确指数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;空间剩余,压入数据</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[(++<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>)&#32;-&#32;1]&#32;=&#32;var;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回正确指数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00077"/>00077 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00082"/><link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">00082</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">STL_rQueue::pop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据队列中大于1,缩短成员空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;&gt;&#32;1)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;整体移动掉一位</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;-&#32;1;&#32;i++)
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;+&#32;i)&#32;=&#32;*(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;+&#32;i&#32;+&#32;1);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配成员空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据队列中等于1,重指定头</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;==&#32;1)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配成员空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据队列为空,返回空队列错误号</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00096"/>00096 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00102"/><link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">00102</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">STL_rQueue::top</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&amp;&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;=&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[0];
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00107"/>00107 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00112"/><link linkend="_class_s_t_l__r_queue_1a9892dad9a7802f12a8bad524aefbe162">00112</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_queue_1a9892dad9a7802f12a8bad524aefbe162">STL_rQueue::The_size</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00114"/>00114 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00119"/><link linkend="_class_s_t_l__r_queue_1a3f1905efcb68f543a152abc8fa1214e3">00119</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_queue_1a3f1905efcb68f543a152abc8fa1214e3">STL_rQueue::The_room</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_s_t_l__r_queue_1a42636190858b2aa8bdf93b80f2e3ed33">room</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00121"/>00121 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00126"/><link linkend="_class_s_t_l__r_queue_1a554dd220ac324bec51a6cde43116efc3">00126</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a554dd220ac324bec51a6cde43116efc3">STL_rQueue::clean</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存分配前的数据头</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;temp_stacks&#32;=&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;如果有成员,重新分配空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*<emphasis role="keyword">&gt;</emphasis>(realloc(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>,&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配失败,善后并返回错误</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;==&#32;NULL)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复原长度</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;temp_stacks;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复数据</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a3df7082063e14f0ae068a2feb3e4a03d">QUEUES_REAL_ERROR</link>;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回错误</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;无成员队列重新分配成员</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;释放全部空间</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>&#32;=&#32;0;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重指定首部</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00144"/>00144 <emphasis role="comment">//&#32;&#32;无数据返回空队列</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a42636190858b2aa8bdf93b80f2e3ed33">room</link>&#32;=&#32;<link linkend="_class_s_t_l__r_queue_1ae5ab3dd9890cb990edaf511174da12a1">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;新的空间大小</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00147"/>00147 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00153"/><link linkend="_class_s_t_l__r_queue_1ac57bfdea03866852334cbf52e262e286">00153</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;&#32;<link linkend="_class_s_t_l__r_queue_1ac57bfdea03866852334cbf52e262e286">STL_rQueue::push32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[3]);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[2]);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[1]);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a20a4e57dc9a4350f49cfada5cf083881">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[0]);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00159"/>00159 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00165"/><link linkend="_class_s_t_l__r_queue_1a3431ef2eff0319a93be5dac50bd19b99">00165</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a3431ef2eff0319a93be5dac50bd19b99">STL_rQueue::poptop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">top</link>(var);&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;var;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00169"/>00169 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00175"/><link linkend="_class_s_t_l__r_queue_1a9362012b2eda4207d130e03f420c11a8">00175</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_queue_1a9362012b2eda4207d130e03f420c11a8">STL_rQueue::poptop32</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[4]&#32;=&#32;{&#32;0,0,0,0&#32;};
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">top</link>(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[3]);&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">top</link>(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[2]);&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">top</link>(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[1]);&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1a3507658579a1abb5e50b34b6bb536ece">top</link>(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>[0]);&#32;<link linkend="_class_s_t_l__r_queue_1a6fcfa9e50f6719e2f3632a6ad333542f">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)(<link linkend="_class_s_t_l__r_queue_1a32e298e5a9194d97492496f5f311068b">dat</link>));}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00182"/>00182 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00187"/>00187 <emphasis role="comment"></emphasis>void(*<link linkend="_class_s_t_l__r_queue_1a8deafb8a60277665e85b99deeff96d8c">STL_rQueue::poptopfun</link>(<emphasis role="keywordtype">void</emphasis>))(void)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>(*)(void))poptop32();}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00189"/>00189 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00194"/><link linkend="_class_s_t_l__r_queue_1a6279ce46687da109354f7f84b979343f">00194</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_s_t_l__r_queue_1a6279ce46687da109354f7f84b979343f">STL_rQueue::pushfun</link>(<emphasis role="keywordtype">void</emphasis>(*fun)(<emphasis role="keywordtype">void</emphasis>))&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_queue_1ac57bfdea03866852334cbf52e262e286">push32</link>((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>)fun);}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00197"/>00197 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00198"/>00198 <emphasis role="comment">//&#32;&#32;构造函数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00199"/><link linkend="_class_s_t_l__l_queue_1a144e383b154698f69348bb8f901bdb81">00199</link> <link linkend="_class_s_t_l__l_queue_1a144e383b154698f69348bb8f901bdb81">STL_lQueue::STL_lQueue</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aff375614989295d36b7b30467946332f">STL_lQueue::Hdat</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">STL_lQueue::Tdat</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">STL_lQueue::mem</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00204"/><link linkend="_class_s_t_l__l_queue_1a9c77d831feed1543e4fdefc811580a51">00204</link> <link linkend="_class_s_t_l__l_queue_1a9c77d831feed1543e4fdefc811580a51">STL_lQueue::~STL_lQueue</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>)<link linkend="_class_s_t_l__l_queue_1a9c9a5811f43677f8d70d19377e276510">pop</link>();}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00207"/>00207 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00208"/>00208 <emphasis role="comment">//&#32;&#32;成员函数</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00215"/><link linkend="_class_s_t_l__l_queue_1ab551099da5beb93d91db4472ffd4d5c3">00215</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1ab551099da5beb93d91db4472ffd4d5c3">STL_lQueue::push</link>(<emphasis role="keywordtype">void</emphasis>*&amp;&#32;var,&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;size)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<link linkend="_struct__l_queue">_lQueue</link>*&#32;newdat&#32;=&#32;(<link linkend="_struct__l_queue">_lQueue</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct__l_queue">_lQueue</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newdat&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a0ecfdce5da7daaea657afe0c2060d8e6">QUEUES_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_queue_1acc0ce814c36fdba1027d1639236c14cb">dat</link>&#32;=&#32;var;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_queue_1a87b92ef47f15b682394c69d2f687550a">size</link>&#32;=&#32;size;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_queue_1a3be42777ab564c447ca2b0978e04ef68">back</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>&#32;==&#32;0)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aff375614989295d36b7b30467946332f">Hdat</link>&#32;=&#32;newdat;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>&#32;=&#32;newdat;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aff375614989295d36b7b30467946332f">Hdat</link>-&gt;<link linkend="_struct__l_queue_1a3be42777ab564c447ca2b0978e04ef68">back</link>&#32;=&#32;newdat;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aff375614989295d36b7b30467946332f">Hdat</link>&#32;=&#32;newdat;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;++<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00229"/>00229 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00235"/><link linkend="_class_s_t_l__l_queue_1a9c9a5811f43677f8d70d19377e276510">00235</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1a9c9a5811f43677f8d70d19377e276510">STL_lQueue::pop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;<link linkend="_struct__l_queue">_lQueue</link>*&#32;savedat&#32;=&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存尾部</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>&#32;==&#32;1)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1aff375614989295d36b7b30467946332f">Hdat</link>&#32;=&#32;NULL;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>&gt;1)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>&#32;=&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>-&gt;<link linkend="_struct__l_queue_1a3be42777ab564c447ca2b0978e04ef68">back</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;free(savedat-&gt;<link linkend="_struct__l_queue_1acc0ce814c36fdba1027d1639236c14cb">dat</link>);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;free(savedat);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00247"/>00247 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00254"/><link linkend="_class_s_t_l__l_queue_1a1abec6afbc25d3cc7b3e3cc94c265f9c">00254</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1a1abec6afbc25d3cc7b3e3cc94c265f9c">STL_lQueue::top</link>(<emphasis role="keywordtype">void</emphasis>*&amp;&#32;var,&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&amp;&#32;size)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1aa30f82a9e8ccf14839fb0d4bc0060428">mem</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;var&#32;=&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>-&gt;<link linkend="_struct__l_queue_1acc0ce814c36fdba1027d1639236c14cb">dat</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;size&#32;=&#32;<link linkend="_class_s_t_l__l_queue_1a5019da13d4ba25f2bf7668770be14cfd">Tdat</link>-&gt;<link linkend="_struct__l_queue_1a87b92ef47f15b682394c69d2f687550a">size</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00259"/>00259 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00260"/>00260 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00266"/><link linkend="_class_s_t_l__l_queue_1af2ee00997d848e132c3140e347b7220c">00266</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1af2ee00997d848e132c3140e347b7220c">STL_lQueue::push8</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;num&#32;=&#32;(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a0ecfdce5da7daaea657afe0c2060d8e6">QUEUES_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;*(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)num&#32;=&#32;var;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1ab551099da5beb93d91db4472ffd4d5c3">push</link>(num,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00272"/>00272 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00278"/><link linkend="_class_s_t_l__l_queue_1a7ff92acc4b520646801c93816faf2f07">00278</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1a7ff92acc4b520646801c93816faf2f07">STL_lQueue::top8</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&amp;&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;vars&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;sizes&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1a1abec6afbc25d3cc7b3e3cc94c265f9c">top</link>(vars,&#32;sizes)&#32;==&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>)
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;var&#32;=&#32;*((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)vars);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00285"/>00285 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00290"/><link linkend="_class_s_t_l__l_queue_1a4c67b2f6364aa9105e8754c51bb2ad6a">00290</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1a4c67b2f6364aa9105e8754c51bb2ad6a">STL_lQueue::poptop8</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;temp&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a7ff92acc4b520646801c93816faf2f07">top8</link>(temp);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a9c9a5811f43677f8d70d19377e276510">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00295"/>00295 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00296"/>00296 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00302"/><link linkend="_class_s_t_l__l_queue_1a1231a845c0a916e43c74a18c8b7c1920">00302</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1a1231a845c0a916e43c74a18c8b7c1920">STL_lQueue::push32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;num&#32;=&#32;(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a0ecfdce5da7daaea657afe0c2060d8e6">QUEUES_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;*(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)num&#32;=&#32;var;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1ab551099da5beb93d91db4472ffd4d5c3">push</link>(num,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>));
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00308"/>00308 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00314"/><link linkend="_class_s_t_l__l_queue_1ade1f8e34538de4ae43f7ad2ca46ab493">00314</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1ade1f8e34538de4ae43f7ad2ca46ab493">STL_lQueue::top32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&amp;&#32;var)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;vars&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;sizes&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_queue_1a1abec6afbc25d3cc7b3e3cc94c265f9c">top</link>(vars,&#32;sizes)&#32;==&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>)
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5ad39f1a970bf2ee35cee3b69168e7d4d1">QUEUES_EMPTY</link>;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;var&#32;=&#32;*((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)vars);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___queue_8h_1aa246d039fae29502aba4ffde61bebaa5a277fc31bdbe46a70ffc98da7a7468162">QUEUES_OK</link>;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00321"/>00321 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00326"/><link linkend="_class_s_t_l__l_queue_1a4bf8d4647c741289056d30184e97531b">00326</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__l_queue_1a4bf8d4647c741289056d30184e97531b">STL_lQueue::poptop32</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;temp&#32;=&#32;0;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1ade1f8e34538de4ae43f7ad2ca46ab493">top32</link>(temp);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_queue_1a9c9a5811f43677f8d70d19377e276510">pop</link>();
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00331"/>00331 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00332"/>00332 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00341"/><link linkend="_class_s_t_l__l_queue_1ad702c50174ed400838db74915c0eefda">00341</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_queue_1ad702c50174ed400838db74915c0eefda">STL_lQueue::pushfun</link>(<emphasis role="keywordtype">void</emphasis>(*fun)(<emphasis role="keywordtype">void</emphasis>))&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;res;
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_class_s_t_l__l_queue_1a1231a845c0a916e43c74a18c8b7c1920">push32</link>((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>)fun);
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;}
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00345"/>00345 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00352"/>00352 <emphasis role="comment"></emphasis>void(*<link linkend="_class_s_t_l__l_queue_1a32f62d0933c052bcebeb318c1230f3f7">STL_lQueue::poptopfun</link>(<emphasis role="keywordtype">void</emphasis>))(void)&#32;{
<anchor xml:id="__s_t_l___queue_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>(*)(void))poptop32();}
</programlisting></section>
