<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_t_l___stack_8cpp_source" xml:lang="zh">
<title>STL_Stack.cpp</title>
<indexterm><primary>D:/gitt/MicrochipFor32/STL_Device/STL_Stack.cpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="__s_t_l___stack_8cpp_source_1l00001"/>00001 <emphasis role="comment">/*----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;#&#32;&#32;Copyright&#32;(c)&#32;2022&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00004"/>00004 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00005"/>00005 <emphasis role="comment">&#32;#&#32;&#32;本软件按原样提供,无任何明示或暗示</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00006"/>00006 <emphasis role="comment">&#32;#&#32;&#32;在任何情况下,作者都不承担任何损害赔偿责任</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00007"/>00007 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00008"/>00008 <emphasis role="comment">&#32;#&#32;&#32;使用的许可声明:</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00009"/>00009 <emphasis role="comment">&#32;#&#32;&#32;1.&#32;&#32;不得歪曲本软件的来源,你不能声称你编写了原始软件.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00010"/>00010 <emphasis role="comment">&#32;#&#32;&#32;2.&#32;&#32;免费授予以任何目的,前提是版权声明出现在所有副本中.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00011"/>00011 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;并且版权声明和许可声明同时出现.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00012"/>00012 <emphasis role="comment">&#32;#&#32;&#32;3.&#32;&#32;你有使用,复制,修改,分发,和销售本软件的许可.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00013"/>00013 <emphasis role="comment">&#32;#&#32;&#32;4.&#32;&#32;如果你在产品中使用,产品文档中的声明是赞赏的但不是必须的.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00014"/>00014 <emphasis role="comment">&#32;#&#32;&#32;5.&#32;&#32;本通知不得从任何来源删除或更改.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00015"/>00015 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00016"/>00016 <emphasis role="comment">&#32;#&#32;&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00017"/>00017 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;E-mail:zabbcccbbaz@163.com</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00018"/>00018 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;QQ:2715099320</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00019"/>00019 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;Mobile&#32;Phone:13005636215</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00020"/>00020 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00021"/>00021 <emphasis role="comment">&#32;#&#32;&#32;All&#32;rights&#32;reserved.</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00022"/>00022 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00023"/>00023 
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00035"/>00035 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00036"/>00036 <emphasis role="comment">//&#32;&#32;头文件</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__s_t_l___stack_8h">STL_Stack.h</link>&quot;</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00039"/>00039 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;&#32;构造函数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00041"/><link linkend="_class_s_t_l__r_stack_1a55a54a57fe2f6625ef6b995f2d95e026">00041</link> <link linkend="_class_s_t_l__r_stack_1a55a54a57fe2f6625ef6b995f2d95e026">STL_rStack::STL_rStack</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a857415d9ae151b6acd395760b2e9cedf">room</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;NULL;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00045"/>00045 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00046"/><link linkend="_class_s_t_l__r_stack_1aed992153d5efc1cd3007863c8c08797c">00046</link> <link linkend="_class_s_t_l__r_stack_1aed992153d5efc1cd3007863c8c08797c">STL_rStack::~STL_rStack</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;free(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>);}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00049"/>00049 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00050"/>00050 <emphasis role="comment">//&#32;&#32;成员函数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00056"/><link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">00056</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">STL_rStack::push</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存分配前的数据头</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;temp_stacks&#32;=&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若所需空间小于现有空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;&gt;=&#32;<link linkend="_class_s_t_l__r_stack_1a857415d9ae151b6acd395760b2e9cedf">room</link>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配新长度</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*<emphasis role="keyword">&gt;</emphasis>(realloc(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>,&#32;++<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配失败,善后并且返回错误</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;==&#32;NULL)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复原长度</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;temp_stacks;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复数据</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a9f2b3bdf4ae6c347dbf6bb0797672de7">STACKS_REAL_ERROR</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回错误</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a857415d9ae151b6acd395760b2e9cedf">room</link>&#32;=&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配成功,压入数据</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;-&#32;1]&#32;=&#32;var;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回正确指数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;空间剩余,压入数据</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[(++<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>)&#32;-&#32;1]&#32;=&#32;var;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回正确指数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00078"/>00078 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00083"/><link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">00083</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">STL_rStack::pop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据栈中大于1,缩短成员空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;&gt;&#32;1)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配成员空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据栈中等于1,重指定头</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;==&#32;1)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配成员空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;若数据栈为空,返回空栈错误号</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00095"/>00095 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00101"/><link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">00101</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">STL_rStack::top</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;&amp;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;=&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>-1];
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00106"/>00106 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00111"/><link linkend="_class_s_t_l__r_stack_1ac63cd564c04e4481925ead650dfb2edf">00111</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_stack_1ac63cd564c04e4481925ead650dfb2edf">STL_rStack::The_size</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00113"/>00113 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00118"/><link linkend="_class_s_t_l__r_stack_1a22c1e309f6476f31f1e5c313b01afd13">00118</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_stack_1a22c1e309f6476f31f1e5c313b01afd13">STL_rStack::The_room</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_s_t_l__r_stack_1a857415d9ae151b6acd395760b2e9cedf">room</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00120"/>00120 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00125"/><link linkend="_class_s_t_l__r_stack_1a843cc47e7a2c281dd82392c8ed257dc1">00125</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a843cc47e7a2c281dd82392c8ed257dc1">STL_rStack::clean</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存分配前的数据头</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;temp_stacks&#32;=&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;如果有成员,重新分配空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重新分配空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*<emphasis role="keyword">&gt;</emphasis>(realloc(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>,<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;分配失败,善后并返回错误</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;==&#32;NULL)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复原长度</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;temp_stacks;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;恢复数据</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a9f2b3bdf4ae6c347dbf6bb0797672de7">STACKS_REAL_ERROR</link>;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;返回错误</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;无成员栈重新分配成员</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;释放全部空间</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>&#32;=&#32;0;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;重指定首部</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00143"/>00143 <emphasis role="comment">//&#32;&#32;无数据返回空栈</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a857415d9ae151b6acd395760b2e9cedf">room</link>&#32;=&#32;<link linkend="_class_s_t_l__r_stack_1adf95fc53b74c9955a648f3500ae1e746">size</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;新的空间大小</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00146"/>00146 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00152"/><link linkend="_class_s_t_l__r_stack_1a8a72b28e3a7faa2aae9272d90032d5a5">00152</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a8a72b28e3a7faa2aae9272d90032d5a5">STL_rStack::push32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[3]);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[2]);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[1]);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a153de2f05c0e0164ad68fb09130bf475">push</link>(((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(&amp;var))[0]);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00158"/>00158 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00164"/><link linkend="_class_s_t_l__r_stack_1a31fd424472fcf069ec2cbcb50ab34ed1">00164</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a31fd424472fcf069ec2cbcb50ab34ed1">STL_rStack::poptop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">top</link>(var);<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;var;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00168"/>00168 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00174"/><link linkend="_class_s_t_l__r_stack_1ad64450c2168e2551ed8fad637a8b9c99">00174</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__r_stack_1ad64450c2168e2551ed8fad637a8b9c99">STL_rStack::poptop32</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[4]&#32;=&#32;{&#32;0,0,0,0&#32;};
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">top</link>(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[0]);&#32;<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">top</link>(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[1]);&#32;<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">top</link>(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[2]);&#32;<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a49d2ca43dafd695e4e0d92018736f732">top</link>(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>[3]);&#32;<link linkend="_class_s_t_l__r_stack_1a5c7016a370c7665d554dda4b8f7dee22">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)(<link linkend="_class_s_t_l__r_stack_1a2ff878cef1cc42db3c31812e654c8674">dat</link>));}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00181"/>00181 
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00182"/>00182 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00187"/>00187 <emphasis role="comment"></emphasis>void(*<link linkend="_class_s_t_l__r_stack_1a4d702aae14e43421c0818dba3b8c99a1">STL_rStack::poptopfun</link>(<emphasis role="keywordtype">void</emphasis>))(void)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>(*)(void))poptop32();}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00189"/>00189 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00194"/><link linkend="_class_s_t_l__r_stack_1a4287e70b3adaf5e2a3a941299a085b09">00194</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_s_t_l__r_stack_1a4287e70b3adaf5e2a3a941299a085b09">STL_rStack::pushfun</link>(<emphasis role="keywordtype">void</emphasis>(*fun)(<emphasis role="keywordtype">void</emphasis>)){
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__r_stack_1a8a72b28e3a7faa2aae9272d90032d5a5">push32</link>((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>)fun);}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00197"/>00197 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00198"/>00198 <emphasis role="comment">//&#32;&#32;构造函数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00199"/><link linkend="_class_s_t_l__l_stack_1a029d691b9e7998e4ccb7cf1b362b1bd8">00199</link> <link linkend="_class_s_t_l__l_stack_1a029d691b9e7998e4ccb7cf1b362b1bd8">STL_lStack::STL_lStack</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>&#32;=&#32;NULL;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00202"/>00202 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00203"/><link linkend="_class_s_t_l__l_stack_1a44f31f3912ff977c18e6d5a702319e9f">00203</link> <link linkend="_class_s_t_l__l_stack_1a44f31f3912ff977c18e6d5a702319e9f">STL_lStack::~STL_lStack</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>)<link linkend="_class_s_t_l__l_stack_1a8122fd4341e6851961a210e2361c55b0">pop</link>();}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00206"/>00206 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00207"/>00207 <emphasis role="comment">//&#32;&#32;成员函数</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00214"/><link linkend="_class_s_t_l__l_stack_1a19b8e4216ae1fad27b58bc6b9c10af2e">00214</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a19b8e4216ae1fad27b58bc6b9c10af2e">STL_lStack::push</link>(<emphasis role="keywordtype">void</emphasis>*&#32;&amp;var,<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;size)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<link linkend="_struct__l_stack">_lStack</link>*&#32;newdat&#32;=&#32;(<link linkend="_struct__l_stack">_lStack</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct__l_stack">_lStack</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newdat&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a805af9c12fa10d0d7c4846e02dd8b1d4">STACKS_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_stack_1a6bdae5ac1294a8f08f4b5b8a809e4f32">size</link>&#32;=&#32;size;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_stack_1affc30df8369219ce967936b083106ee4">front</link>&#32;=&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;newdat-&gt;<link linkend="_struct__l_stack_1a560ebf00b475d44dc7a96c9c15d91bc8">dat</link>&#32;=&#32;var;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>&#32;=&#32;newdat;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;++<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00223"/>00223 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00229"/><link linkend="_class_s_t_l__l_stack_1a8122fd4341e6851961a210e2361c55b0">00229</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a8122fd4341e6851961a210e2361c55b0">STL_lStack::pop</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<link linkend="_struct__l_stack">_lStack</link>*&#32;savedat&#32;=&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;保存首部</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>&#32;=&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>-&gt;<link linkend="_struct__l_stack_1affc30df8369219ce967936b083106ee4">front</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;弹出</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;free(savedat-&gt;<link linkend="_struct__l_stack_1a560ebf00b475d44dc7a96c9c15d91bc8">dat</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;回收目标指针</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;free(savedat);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;回收</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;--<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;成员自减</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00237"/>00237 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00244"/><link linkend="_class_s_t_l__l_stack_1a1e1f0b6f70bff3c9dbb95a90cac0f261">00244</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a1e1f0b6f70bff3c9dbb95a90cac0f261">STL_lStack::top</link>(<emphasis role="keywordtype">void</emphasis>*&#32;&amp;var,<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;&amp;size)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_stack_1a73ada1fa0e938b4ea2ce5ce1d43a0e69">mem</link>==0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;var&#32;=&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>-&gt;<link linkend="_struct__l_stack_1a560ebf00b475d44dc7a96c9c15d91bc8">dat</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;size&#32;=&#32;<link linkend="_class_s_t_l__l_stack_1af1c37b0edd984eae41db798351eb87fe">dat</link>-&gt;<link linkend="_struct__l_stack_1a6bdae5ac1294a8f08f4b5b8a809e4f32">size</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00249"/>00249 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00250"/>00250 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00256"/><link linkend="_class_s_t_l__l_stack_1af48199bb7c616ad2b4642ca967296e30">00256</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1af48199bb7c616ad2b4642ca967296e30">STL_lStack::push8</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;num=(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a805af9c12fa10d0d7c4846e02dd8b1d4">STACKS_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;*(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)num&#32;=&#32;var;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a19b8e4216ae1fad27b58bc6b9c10af2e">push</link>(num,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00262"/>00262 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00268"/><link linkend="_class_s_t_l__l_stack_1a5e3abb3c9743eff3757b95ce2bdc8d47">00268</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a5e3abb3c9743eff3757b95ce2bdc8d47">STL_lStack::top8</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&amp;&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;vars=NULL;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;sizes=0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_stack_1a1e1f0b6f70bff3c9dbb95a90cac0f261">top</link>(vars,&#32;sizes)&#32;==&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>)
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;var&#32;=&#32;*((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)vars);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00275"/>00275 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00280"/><link linkend="_class_s_t_l__l_stack_1ab4a4991e79e9e3fd14cd9e7e9a7d4c5a">00280</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1ab4a4991e79e9e3fd14cd9e7e9a7d4c5a">STL_lStack::poptop8</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;temp=0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a5e3abb3c9743eff3757b95ce2bdc8d47">top8</link>(temp);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a8122fd4341e6851961a210e2361c55b0">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00285"/>00285 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00286"/>00286 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00292"/><link linkend="_class_s_t_l__l_stack_1a3f662cd8f02f5fa991f4c489ec384194">00292</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a3f662cd8f02f5fa991f4c489ec384194">STL_lStack::push32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;num&#32;=&#32;(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(num&#32;==&#32;NULL)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a805af9c12fa10d0d7c4846e02dd8b1d4">STACKS_MALL_ERROR</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;*(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)num&#32;=&#32;var;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a19b8e4216ae1fad27b58bc6b9c10af2e">push</link>(num,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>));
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00298"/>00298 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00304"/><link linkend="_class_s_t_l__l_stack_1a1cbd6347328f1bf000e7662a5386d361">00304</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1a1cbd6347328f1bf000e7662a5386d361">STL_lStack::top32</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&amp;&#32;var)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;vars&#32;=&#32;NULL;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;sizes&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_s_t_l__l_stack_1a1e1f0b6f70bff3c9dbb95a90cac0f261">top</link>(vars,&#32;sizes)&#32;==&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>)
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0aeb269e15565d4aaef1a9b5023a160eba">STACKS_EMPTY</link>;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;var&#32;=&#32;*((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>*)vars);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_t_l___stack_8h_1ad01fec74b6b0b6c599780dd41cf55ec0a3e9b3bff72ae3f8f3c62c4f4bc24ca16">STACKS_OK</link>;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00311"/>00311 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00316"/><link linkend="_class_s_t_l__l_stack_1a5d566c869456665d5dd831e28cfcb7ab">00316</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;<link linkend="_class_s_t_l__l_stack_1a5d566c869456665d5dd831e28cfcb7ab">STL_lStack::poptop32</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;temp&#32;=&#32;0;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a1cbd6347328f1bf000e7662a5386d361">top32</link>(temp);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<link linkend="_class_s_t_l__l_stack_1a8122fd4341e6851961a210e2361c55b0">pop</link>();
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00321"/>00321 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00322"/>00322 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00331"/><link linkend="_class_s_t_l__l_stack_1ad321b32eb00ba9d63ddf2631a143abf0">00331</link> <emphasis role="comment"></emphasis><link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_class_s_t_l__l_stack_1ad321b32eb00ba9d63ddf2631a143abf0">STL_lStack::pushfun</link>(<emphasis role="keywordtype">void</emphasis>(*fun)(<emphasis role="keywordtype">void</emphasis>))&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;res;
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;res=<link linkend="_class_s_t_l__l_stack_1a3f662cd8f02f5fa991f4c489ec384194">push32</link>((<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>)fun);
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;}
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00335"/>00335 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00342"/>00342 <emphasis role="comment"></emphasis>void(*<link linkend="_class_s_t_l__l_stack_1a027231aabf8efb3c813be67eabbbee55">STL_lStack::poptopfun</link>(<emphasis role="keywordtype">void</emphasis>))(void)&#32;{
<anchor xml:id="__s_t_l___stack_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">void</emphasis>(*)(void))poptop32();}
</programlisting></section>
