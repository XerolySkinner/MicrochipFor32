<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source" xml:lang="zh">
<title>bsp_OLED_STM32.cpp</title>
<indexterm><primary>D:/gitt/MicrochipFor32/bsp_Device/bsp_OLED_STM32.cpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00001"/>00001 <emphasis role="comment">/*----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00002"/>00002 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00003"/>00003 <emphasis role="comment">&#32;#&#32;&#32;Copyright&#32;(c)&#32;2022&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00004"/>00004 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00005"/>00005 <emphasis role="comment">&#32;#&#32;&#32;本软件按原样提供,无任何明示或暗示</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00006"/>00006 <emphasis role="comment">&#32;#&#32;&#32;在任何情况下,作者都不承担任何损害赔偿责任</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00007"/>00007 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00008"/>00008 <emphasis role="comment">&#32;#&#32;&#32;使用的许可声明:</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00009"/>00009 <emphasis role="comment">&#32;#&#32;&#32;1.&#32;&#32;不得歪曲本软件的来源,你不能声称你编写了原始软件.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00010"/>00010 <emphasis role="comment">&#32;#&#32;&#32;2.&#32;&#32;免费授予以任何目的,前提是版权声明出现在所有副本中.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00011"/>00011 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;并且版权声明和许可声明同时出现.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00012"/>00012 <emphasis role="comment">&#32;#&#32;&#32;3.&#32;&#32;你有使用,复制,修改,分发,和销售本软件的许可.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00013"/>00013 <emphasis role="comment">&#32;#&#32;&#32;4.&#32;&#32;如果你在产品中使用,产品文档中的声明是赞赏的但不是必须的.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00014"/>00014 <emphasis role="comment">&#32;#&#32;&#32;5.&#32;&#32;本通知不得从任何来源删除或更改.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00015"/>00015 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00016"/>00016 <emphasis role="comment">&#32;#&#32;&#32;Yuankang&#32;Liang(XerolySkinner)</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00017"/>00017 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;E-mail:zabbcccbbaz@163.com</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00018"/>00018 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;QQ:2715099320</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00019"/>00019 <emphasis role="comment">&#32;#&#32;&#32;&#32;&#32;&#32;&#32;Mobile&#32;Phone:13005636215</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00020"/>00020 <emphasis role="comment">&#32;#</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00021"/>00021 <emphasis role="comment">&#32;#&#32;&#32;All&#32;rights&#32;reserved.</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00022"/>00022 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00023"/>00023 
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_bsp___i_i_c___s_t_m32_8h">bsp_IIC_STM32.h</link>&quot;</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_bsp___o_l_e_d___s_t_m32_8h">bsp_OLED_STM32.h</link>&quot;</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00037"/>00037 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;<link linkend="_bsp___o_l_e_d___s_t_m32_8cpp_1a1044366356ed639ee7754656558a44fb">OLED_WORD_ASCII</link>[];
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00039"/>00039 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;&#32;类函数</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00041"/>00041 <emphasis role="comment">//&#32;&#32;</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00046"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">00046</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">bsp_STM32_OLED::Send_cmd</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;cmd)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a9f4cdf777e69f407b155ffdba5b9e7c8">IIC_WriteOneByte</link>(0x3C,&#32;0x00,&#32;cmd);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00048"/>00048 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00053"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a7d11c69d54c2fac372a9e690319c111e">00053</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a7d11c69d54c2fac372a9e690319c111e">bsp_STM32_OLED::Send_dat</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;dat)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a9f4cdf777e69f407b155ffdba5b9e7c8">IIC_WriteOneByte</link>(0x3C,&#32;0x40,&#32;dat);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00055"/>00055 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00061"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a333b835b09d4471f1be248b88c527d68">00061</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a333b835b09d4471f1be248b88c527d68">bsp_STM32_OLED::Send_len_dat</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;dat,&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;len)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a9d5d55340f9c43998763ecd0fb67b88c">IIC_Write</link>(0x3C,&#32;0x40,&#32;(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)dat,&#32;len);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00063"/>00063 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00068"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">00068</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">bsp_STM32_OLED::Column_set</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;column)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">Send_cmd</link>(0x10&#32;|&#32;(column&#32;&gt;&gt;&#32;4));&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//设置列地址高位</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">Send_cmd</link>(0x00&#32;|&#32;(column&#32;&amp;&#32;0x0f));&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//设置列地址低位</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00072"/>00072 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00077"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">00077</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">bsp_STM32_OLED::Page_set</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;page)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">Send_cmd</link>(0xb0&#32;+&#32;page);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00079"/>00079 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00084"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a1d6d3de485739ab13cde6f4c51a97e72">00084</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a1d6d3de485739ab13cde6f4c51a97e72">bsp_STM32_OLED::Clear</link>(<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;dat)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;page;
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(page&#32;=&#32;0;&#32;page&#32;&lt;&#32;8;&#32;page++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">Page_set</link>(page);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">Column_set</link>(0);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a97ad38a37ad0140987ba79d878f0d9e9">IIC_Start</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x3C&#32;&lt;&lt;&#32;1);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x40);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;128;&#32;i++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(dat);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae513e1a05cbbae2a6f37e6cbb3bb63e2">IIC_Stop</link>();}}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00098"/>00098 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00103"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a60d512f9509a7809566159058caa8a01">00103</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a60d512f9509a7809566159058caa8a01">bsp_STM32_OLED::Picture_display</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;ptr_pic)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;page;
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(page&#32;=&#32;0;&#32;page&#32;&lt;&#32;(64&#32;/&#32;8);&#32;page++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">Page_set</link>(page);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">Column_set</link>(0);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a97ad38a37ad0140987ba79d878f0d9e9">IIC_Start</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x3C&#32;&lt;&lt;&#32;1);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x40);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;128;&#32;i++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(ptr_pic[i]);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae513e1a05cbbae2a6f37e6cbb3bb63e2">IIC_Stop</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr_pic&#32;+=&#32;128;}}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00118"/>00118 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00123"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1acbb37e4600b98dd8e16b6a8750daae15">00123</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1acbb37e4600b98dd8e16b6a8750daae15">bsp_STM32_OLED::Picture_ReverseDisplay</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*&#32;ptr_pic)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;page;
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(page&#32;=&#32;0;&#32;page&#32;&lt;&#32;(64&#32;/&#32;8);&#32;page++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">Page_set</link>(page);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">Column_set</link>(0);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a97ad38a37ad0140987ba79d878f0d9e9">IIC_Start</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x3C&#32;&lt;&lt;&#32;1);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(0x40);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;128;&#32;i++)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae2e78aae0c89a4d6063d8ba60752acd5">IIC_SendByte</link>(~(ptr_pic[i]));
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1a3f14f230b5876c529380d4f51a9c9c12">IIC_WaitAck</link>();}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___i_i_c_1ae513e1a05cbbae2a6f37e6cbb3bb63e2">IIC_Stop</link>();
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr_pic&#32;+=&#32;128;}}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00138"/>00138 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00145"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a2fd3f6c887830072509f5aa916ad8751">00145</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a2fd3f6c887830072509f5aa916ad8751">bsp_STM32_OLED::Draw_ASCII</link>(<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;H,&#32;<link linkend="_varint_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link>&#32;V,&#32;<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>&#32;word)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;word&#32;-=&#32;33;
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">Page_set</link>(V&#32;*&#32;2);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">Column_set</link>(H&#32;*&#32;8);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a333b835b09d4471f1be248b88c527d68">Send_len_dat</link>((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(<link linkend="_bsp___o_l_e_d___s_t_m32_8h_1a1830381a075ec676792bda830bdee09e">OLED_WORD_ASCII</link>&#32;+&#32;(word&#32;*&#32;16)),&#32;8);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1ace503e57e2f9abe155bd1bae7eb83bff">Page_set</link>(V&#32;*&#32;2&#32;+&#32;1);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8650b7dca00244d1c6a5b1530e08be20">Column_set</link>(H&#32;*&#32;8);
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a333b835b09d4471f1be248b88c527d68">Send_len_dat</link>((<link linkend="_varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link>*)(<link linkend="_bsp___o_l_e_d___s_t_m32_8h_1a1830381a075ec676792bda830bdee09e">OLED_WORD_ASCII</link>&#32;+&#32;(word&#32;*&#32;16)&#32;+&#32;8),&#32;8);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00153"/>00153 <emphasis role="comment">//----------------------------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00158"/><link linkend="_classbsp___s_t_m32___o_l_e_d_1a8d7c3a121efe0f93f01b4c0423843d7a">00158</link> <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a8d7c3a121efe0f93f01b4c0423843d7a">bsp_STM32_OLED::Init</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;25;&#32;i++)
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classbsp___s_t_m32___o_l_e_d_1a4ce72ba6b9e7c027ecfaf9ad8fc30135">Send_cmd</link>(<link linkend="_bsp___o_l_e_d___s_t_m32_8h_1a302eedcb477b4d3c89cf5629e45c41e5">OLED_init_cmd</link>[i]);}
<anchor xml:id="_bsp___o_l_e_d___s_t_m32_8cpp_source_1l00162"/>00162 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
