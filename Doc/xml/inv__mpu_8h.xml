<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="zh">
  <compounddef id="inv__mpu_8h" kind="file" language="C++">
    <compoundname>inv_mpu.h</compoundname>
    <includes local="yes">main.h</includes>
    <includes refid="varint_8h" local="yes">varint.h</includes>
    <includedby refid="inv__mpu_8c" local="yes">D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c</includedby>
    <includedby refid="inv__mpu__dmp__motion__driver_8c" local="yes">D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu_dmp_motion_driver.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>varint.h</label>
        <link refid="varint_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h</label>
        <link refid="inv__mpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>main.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c</label>
        <link refid="inv__mpu_8c"/>
      </node>
      <node id="1">
        <label>D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h</label>
        <link refid="inv__mpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu_dmp_motion_driver.c</label>
        <link refid="inv__mpu__dmp__motion__driver_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structint__param__s" prot="public">int_param_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga292d717406e906831952ce46612fe4cd" prot="public" static="no">
        <name>DEFAULT_MPU_HZ</name>
        <initializer>(100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="27" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gabf02bf28541421d59f8be764f2b95407" prot="public" static="no">
        <name>INV_X_GYRO</name>
        <initializer>(0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="29" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gacdd8ff833a34dba08ca2aa145eb92b44" prot="public" static="no">
        <name>INV_Y_GYRO</name>
        <initializer>(0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="30" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga50205b5cc6089b33b2561c854eb8b0fd" prot="public" static="no">
        <name>INV_Z_GYRO</name>
        <initializer>(0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="31" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga3fdc30f9c0a26c2c4e2bb88921f91629" prot="public" static="no">
        <name>INV_XYZ_GYRO</name>
        <initializer>(<ref refid="group___d_r_i_v_e_r_s_1gabf02bf28541421d59f8be764f2b95407" kindref="member">INV_X_GYRO</ref> | <ref refid="group___d_r_i_v_e_r_s_1gacdd8ff833a34dba08ca2aa145eb92b44" kindref="member">INV_Y_GYRO</ref> | <ref refid="group___d_r_i_v_e_r_s_1ga50205b5cc6089b33b2561c854eb8b0fd" kindref="member">INV_Z_GYRO</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="32" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" prot="public" static="no">
        <name>INV_XYZ_ACCEL</name>
        <initializer>(0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="33" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" prot="public" static="no">
        <name>INV_XYZ_COMPASS</name>
        <initializer>(0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="34" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga0cddf0dffaf3bf65fd3ed92dda4f3193" prot="public" static="no">
        <name>MPU_INT_STATUS_DATA_READY</name>
        <initializer>(0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="50" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga380dd1ef256931e99302c371ad7752f4" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP</name>
        <initializer>(0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="51" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gaa38d7976e86186bf353cb89ca7561f29" prot="public" static="no">
        <name>MPU_INT_STATUS_PLL_READY</name>
        <initializer>(0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="52" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga5755e84f3a2e7d331f7612dbfea18ecc" prot="public" static="no">
        <name>MPU_INT_STATUS_I2C_MST</name>
        <initializer>(0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="53" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gaf8e1684698ad837d0318a72b1ef73b13" prot="public" static="no">
        <name>MPU_INT_STATUS_FIFO_OVERFLOW</name>
        <initializer>(0x0010)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="54" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gad5eee7ff393f842ca4ae969cc0019030" prot="public" static="no">
        <name>MPU_INT_STATUS_ZMOT</name>
        <initializer>(0x0020)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="55" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gaa1ab51fb5995e568edd425f8486cb2c8" prot="public" static="no">
        <name>MPU_INT_STATUS_MOT</name>
        <initializer>(0x0040)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="56" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga000cfa5230cb895c6bad322856465552" prot="public" static="no">
        <name>MPU_INT_STATUS_FREE_FALL</name>
        <initializer>(0x0080)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="57" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga2398e82f93220e3cfa1ef31bfb6d76bd" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_0</name>
        <initializer>(0x0100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="58" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga5ac2e94db5083456fa531fceee0997f5" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_1</name>
        <initializer>(0x0200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="59" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gab7543433b9679174597e00e5d7cb6279" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_2</name>
        <initializer>(0x0400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="60" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1gaea5cac4528bb19757de4eb4fa46a374f" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_3</name>
        <initializer>(0x0800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="61" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga4345dc987e1b65ef8ddc6160f592e144" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_4</name>
        <initializer>(0x1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="62" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_r_i_v_e_r_s_1ga101643480b83c302a4a3089fe9149e8e" prot="public" static="no">
        <name>MPU_INT_STATUS_DMP_5</name>
        <initializer>(0x2000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="63" column="9" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_init</definition>
        <argsstring>(void)</argsstring>
        <name>mpu_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize hardware. Initial configuration:<linebreak/>
Gyro FSR: +/- 2000DPS<linebreak/>
Accel FSR +/- 2G<linebreak/>
DLPF: 42Hz<linebreak/>
FIFO rate: 50Hz<linebreak/>
Clock source: Gyro PLL<linebreak/>
FIFO: Disabled.<linebreak/>
Data ready interrupt: Disabled, active low, unlatched. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">int_param</parametername>
</parameternamelist>
<parameterdescription>
<para>Platform-specific parameters to interrupt API. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="757" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="757" bodyend="871" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="66" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gab72e3cead391dee41f28e041282d743f" compoundref="inv__mpu_8c" startline="256">chip_cfg_s::accel_half</references>
        <references refid="group___d_r_i_v_e_r_s_1gab745dd73e0c3ef01f30f96444358cb89" compoundref="inv__mpu_8c" startline="182">gyro_reg_s::accel_offs</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6f12e54ae8c7f2dd77954f3ab619bbb9" compoundref="inv__mpu_8c" startline="263">chip_cfg_s::active_low_int</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3769fd3fa71deaef1e77ce14c26f679d" compoundref="inv__mpu_8c" startline="380">BIT_FIFO_SIZE_1024</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf4ce49fd1fc9b1461b5241f9ef4812f4" compoundref="inv__mpu_8c" startline="383">BIT_RESET</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6d3a962d6435644c7ea68e7d65934636" compoundref="inv__mpu_8c" startline="251">chip_cfg_s::bypass_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1gadf3b491a068e0225a080821516353bac" compoundref="inv__mpu_8c" startline="261">chip_cfg_s::cache</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7bd5165d6e62cb0d814cf3401958445" compoundref="inv__mpu_8c" startline="243">chip_cfg_s::clk_src</references>
        <references refid="group___d_r_i_v_e_r_s_1gae36aca5baf9b6b7d74992aef00686d67" compoundref="inv__mpu_8c" startline="49">delay_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1d2ff55e17aae1459dfad61d76054b1b" compoundref="inv__mpu_8c" startline="269">chip_cfg_s::dmp_loaded</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5f42b7e1e740f2fb64427417e9e2dab7" compoundref="inv__mpu_8c" startline="271">chip_cfg_s::dmp_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga279cd5d5d78890357f2d42905d7471df" compoundref="inv__mpu_8c" startline="260">chip_cfg_s::int_motion_only</references>
        <references refid="group___d_r_i_v_e_r_s_1gga75570f009627c6f4ddfb2d936d81e207a01b240917a78674d3e387110a6a8f94c" compoundref="inv__mpu_8c" startline="340">INV_CLK_PLL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga55ce40fc460a62829ec149edaccffe7c" compoundref="inv__mpu_8c" startline="265">chip_cfg_s::latched_int</references>
        <references refid="group___d_r_i_v_e_r_s_1gab354affc295f7d61fe8a355c9361cc5a" compoundref="inv__mpu_8c" startline="58">log_e</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2905fba7885cd95057e1655cb4d16bda" compoundref="inv__mpu_8c" startline="57">log_i</references>
        <references refid="group___d_r_i_v_e_r_s_1ga33e138d8a49744eb9b4ea0e9086cef1c" compoundref="inv__mpu_8c" startline="258">chip_cfg_s::lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga16ec8ca8298f62ac01419775377270fb" compoundref="inv__mpu_8c" startline="242">chip_cfg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3374bececb6743893c9eab27645c1182" compoundref="inv__mpu_8c" startline="2304" endline="2326">mpu_read_mem</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2713a96af104cfb2ae8e0ed4c3718119" compoundref="inv__mpu_8c" startline="1246" endline="1276">mpu_set_accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga36f70f38371b48d81094d3b061233e15" compoundref="inv__mpu_8c" startline="1817" endline="1860">mpu_set_bypass</references>
        <references refid="group___d_r_i_v_e_r_s_1ga78da3828de0ef9d080c4d03e7bc45e7b" compoundref="inv__mpu_8c" startline="1436" endline="1451">mpu_set_compass_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gad09e6031c8677adc0b8a39b6deea8e27" compoundref="inv__mpu_8c" startline="1181" endline="1211">mpu_set_gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" compoundref="inv__mpu_8c" startline="1319" endline="1345">mpu_set_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf418d8a6b0e262df54ab8a6a5228011c" compoundref="inv__mpu_8c" startline="160">gyro_reg_s::prod_id</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa01fb0872030e8e2932f8d1d257ea86a" compoundref="inv__mpu_8c" startline="178">gyro_reg_s::pwr_mgmt_1</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4764ce0ba4e07a4c774f69ab3b83d1f9" compoundref="inv__mpu_8c" startline="2424" endline="2527">setup_compass</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga9093183fe619360b3b1bfb8aab030592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_init_slave</definition>
        <argsstring>(void)</argsstring>
        <name>mpu_init_slave</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="67" column="5" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga36f70f38371b48d81094d3b061233e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_bypass</definition>
        <argsstring>(unsigned char bypass_on)</argsstring>
        <name>mpu_set_bypass</name>
        <param>
          <type>unsigned char</type>
          <declname>bypass_on</declname>
        </param>
        <briefdescription>
<para>Set device to bypass mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bypass_on</parametername>
</parameternamelist>
<parameterdescription>
<para>1 to enable bypass mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1817" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1817" bodyend="1860" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="68" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga6f12e54ae8c7f2dd77954f3ab619bbb9" compoundref="inv__mpu_8c" startline="263">chip_cfg_s::active_low_int</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8467782bedc44051c95643e303543655" compoundref="inv__mpu_8c" startline="394">BIT_ACTL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1f50796ca0363292d9ac9cc1d29d9225" compoundref="inv__mpu_8c" startline="396">BIT_ANY_RD_CLR</references>
        <references refid="group___d_r_i_v_e_r_s_1gabcdedbd3098140aa14ad17bcaca8e176" compoundref="inv__mpu_8c" startline="393">BIT_AUX_IF_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1gadd12a8d89e1a4c4e008b12a96dd4c75d" compoundref="inv__mpu_8c" startline="397">BIT_BYPASS_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga588b5a95724c4a68c6868faa78fd3a7f" compoundref="inv__mpu_8c" startline="395">BIT_LATCH_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6d3a962d6435644c7ea68e7d65934636" compoundref="inv__mpu_8c" startline="251">chip_cfg_s::bypass_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gae36aca5baf9b6b7d74992aef00686d67" compoundref="inv__mpu_8c" startline="49">delay_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gaae7bdbff2a1029245890b555b2d8d519" compoundref="inv__mpu_8c" startline="180">gyro_reg_s::int_pin_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" compoundref="inv__mpu_8h" startline="34">INV_XYZ_COMPASS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga55ce40fc460a62829ec149edaccffe7c" compoundref="inv__mpu_8c" startline="265">chip_cfg_s::latched_int</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <references refid="group___d_r_i_v_e_r_s_1ga12505a7d8cd7c976e5571f27a6160d23" compoundref="inv__mpu_8c" startline="161">gyro_reg_s::user_ctrl</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga4764ce0ba4e07a4c774f69ab3b83d1f9" compoundref="inv__mpu_8c" startline="2424" endline="2527">setup_compass</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_lp_accel_mode</definition>
        <argsstring>(unsigned char rate)</argsstring>
        <name>mpu_lp_accel_mode</name>
        <param>
          <type>unsigned char</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Enter low-power accel-only mode. In low-power accel mode, the chip goes to sleep and only wakes up to sample the accelerometer at one of the following frequencies: <linebreak/>
 MPU6050: 1.25Hz, 5Hz, 20Hz, 40Hz <linebreak/>
 MPU6500: 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz <linebreak/>
 If the requested rate is not one listed above, the device will be set to the next highest rate. Requesting a rate above the maximum supported frequency will result in an error. <linebreak/>
 To select a fractional wake-up frequency, round down the value passed to <emphasis>rate</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum sampling rate, or zero to disable LP accel mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="888" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="888" bodyend="964" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="71" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga63e6f23af37626aa1498d8c248f259e7" compoundref="inv__mpu_8c" startline="399">BIT_LPA_CYCLE</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4e2ef22b94b90f9b83394dfe1f688ce4" compoundref="inv__mpu_8c" startline="407">BIT_STBY_XYZG</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7bd5165d6e62cb0d814cf3401958445" compoundref="inv__mpu_8c" startline="243">chip_cfg_s::clk_src</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7ab44c7d0127a9466747853533a537b567" compoundref="inv__mpu_8c" startline="347">INV_LPA_1_25HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7accaaf47c58dfe32cbf2ffa11fdb83108" compoundref="inv__mpu_8c" startline="349">INV_LPA_20HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7a798d2b86eafcf3fc7c7fe775f46cb4cb" compoundref="inv__mpu_8c" startline="350">INV_LPA_40HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7a474cac76bff369dd656cc973207a1ca5" compoundref="inv__mpu_8c" startline="348">INV_LPA_5HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" compoundref="inv__mpu_8h" startline="33">INV_XYZ_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga33e138d8a49744eb9b4ea0e9086cef1c" compoundref="inv__mpu_8c" startline="258">chip_cfg_s::lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga653cb855300bff9285ce4b8dca6a503b" compoundref="inv__mpu_8c" startline="1879" endline="1897">mpu_set_int_latched</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" compoundref="inv__mpu_8c" startline="1319" endline="1345">mpu_set_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa01fb0872030e8e2932f8d1d257ea86a" compoundref="inv__mpu_8c" startline="178">gyro_reg_s::pwr_mgmt_1</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_lp_motion_interrupt</definition>
        <argsstring>(unsigned short thresh, unsigned char time, unsigned char lpa_freq)</argsstring>
        <name>mpu_lp_motion_interrupt</name>
        <param>
          <type>unsigned short</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>time</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>lpa_freq</declname>
        </param>
        <briefdescription>
<para>Enters LP accel motion interrupt mode. The behavior of this feature is very different between the MPU6050 and the MPU6500. Each chip&apos;s version of this feature is explained below. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 MPU6050: <linebreak/>
 When this mode is first enabled, the hardware captures a single accel sample, and subsequent samples are compared with this one to determine if the device is in motion. Therefore, whenever this &quot;locked&quot; sample needs to be changed, this function must be called again.</para>
<para><linebreak/>
 The hardware motion threshold can be between 32mg and 8160mg in 32mg increments.</para>
<para><linebreak/>
 Low-power accel mode supports the following frequencies: <linebreak/>
 1.25Hz, 5Hz, 20Hz, 40Hz</para>
<para><linebreak/>
 MPU6500: <linebreak/>
 Unlike the MPU6050 version, the hardware does not &quot;lock in&quot; a reference sample. The hardware monitors the accel data and detects any large change over a short period of time.</para>
<para><linebreak/>
 The hardware motion threshold can be between 4mg and 1020mg in 4mg increments.</para>
<para><linebreak/>
 MPU6500 Low-power accel mode supports the following frequencies: <linebreak/>
 1.25Hz, 2.5Hz, 5Hz, 10Hz, 20Hz, 40Hz, 80Hz, 160Hz, 320Hz, 640Hz</para>
<para><linebreak/>
<linebreak/>
 NOTES: <linebreak/>
 The driver will round down <emphasis>thresh</emphasis> to the nearest supported value if an unsupported threshold is selected. <linebreak/>
 To select a fractional wake-up frequency, round down the value passed to <emphasis>lpa_freq</emphasis>. <linebreak/>
 The MPU6500 does not support a delay parameter. If this function is used for the MPU6500, the value passed to <emphasis>time</emphasis> will be ignored. <linebreak/>
 To disable this mode, set <emphasis>lpa_freq</emphasis> to zero. The driver will restore the previous configuration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">thresh</parametername>
</parameternamelist>
<parameterdescription>
<para>Motion threshold in mg. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration in milliseconds that the accel data must exceed <emphasis>thresh</emphasis> before motion is reported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lpa_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum sampling rate, or zero to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2642" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2642" bodyend="2848" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="72" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gae93a446c54cc00bc7f11209d7af0025e" compoundref="inv__mpu_8c" startline="164">gyro_reg_s::accel_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gacfb901facda5ef8a02d47726db98e58e" compoundref="inv__mpu_8c" startline="223">motion_int_cache_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga63e6f23af37626aa1498d8c248f259e7" compoundref="inv__mpu_8c" startline="399">BIT_LPA_CYCLE</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6a8f2f7f3dd17bc05d9c6286d15c7ada" compoundref="inv__mpu_8c" startline="375">BIT_MOT_INT_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4e2ef22b94b90f9b83394dfe1f688ce4" compoundref="inv__mpu_8c" startline="407">BIT_STBY_XYZG</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3c9c0234d4a71c9d35bb0da64ea867eb" compoundref="inv__mpu_8c" startline="378">BITS_HPF</references>
        <references refid="group___d_r_i_v_e_r_s_1ga75b1479e451b747afb3b24cbc4df99f7" compoundref="inv__mpu_8c" startline="398">BITS_WOM_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1gadf3b491a068e0225a080821516353bac" compoundref="inv__mpu_8c" startline="261">chip_cfg_s::cache</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7bd5165d6e62cb0d814cf3401958445" compoundref="inv__mpu_8c" startline="243">chip_cfg_s::clk_src</references>
        <references refid="group___d_r_i_v_e_r_s_1gae36aca5baf9b6b7d74992aef00686d67" compoundref="inv__mpu_8c" startline="49">delay_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6461e400e336d2ccbc8c7d95ace9461d" compoundref="inv__mpu_8c" startline="228">motion_int_cache_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga41501694a84bdf70e9c660852b653273" compoundref="inv__mpu_8c" startline="227">motion_int_cache_s::fifo_sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gae9614e4c92be9fc08f2aec7f34853fbc" compoundref="inv__mpu_8c" startline="222">motion_int_cache_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga48b47844d4b0570e60aa6806faa59eae" compoundref="inv__mpu_8c" startline="174">gyro_reg_s::int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga279cd5d5d78890357f2d42905d7471df" compoundref="inv__mpu_8c" startline="260">chip_cfg_s::int_motion_only</references>
        <references refid="group___d_r_i_v_e_r_s_1gga75570f009627c6f4ddfb2d936d81e207a01b240917a78674d3e387110a6a8f94c" compoundref="inv__mpu_8c" startline="340">INV_CLK_PLL</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a9f0263fbbdccd3c5a18fcb65be278d24" compoundref="inv__mpu_8c" startline="308">INV_FILTER_256HZ_NOLPF2</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7ab44c7d0127a9466747853533a537b567" compoundref="inv__mpu_8c" startline="347">INV_LPA_1_25HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7accaaf47c58dfe32cbf2ffa11fdb83108" compoundref="inv__mpu_8c" startline="349">INV_LPA_20HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7a798d2b86eafcf3fc7c7fe775f46cb4cb" compoundref="inv__mpu_8c" startline="350">INV_LPA_40HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga23c3fcde795e5aa2b141232d490c9ca7a474cac76bff369dd656cc973207a1ca5" compoundref="inv__mpu_8c" startline="348">INV_LPA_5HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1ga22eeac0bd77e7d99b3e15dda52f1bd08" compoundref="inv__mpu_8c" startline="159">gyro_reg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1gac1a1eb41631eb71481d6d247d9c67d4a" compoundref="inv__mpu_8c" startline="224">motion_int_cache_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga16ec8ca8298f62ac01419775377270fb" compoundref="inv__mpu_8c" startline="242">chip_cfg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1gab2065a062ea7d6179cd8407b2ab4d146" compoundref="inv__mpu_8c" startline="167">gyro_reg_s::motion_thr</references>
        <references refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1gab6087a15ee23db23b6aec41590329a60" compoundref="inv__mpu_8c" startline="1218" endline="1239">mpu_get_accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga093f11eb10b2639a4b9fe344ea348c54" compoundref="inv__mpu_8c" startline="1516" endline="1520">mpu_get_fifo_config</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf973c32c73ba912ff512aab948fc31ca" compoundref="inv__mpu_8c" startline="1154" endline="1174">mpu_get_gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa95c7e216dcb2d888e9796001ca555f8" compoundref="inv__mpu_8c" startline="1283" endline="1311">mpu_get_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2487dd551b701c1c7ed4d6335f02b2f1" compoundref="inv__mpu_8c" startline="1352" endline="1359">mpu_get_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" compoundref="inv__mpu_8c" startline="888" endline="964">mpu_lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2713a96af104cfb2ae8e0ed4c3718119" compoundref="inv__mpu_8c" startline="1246" endline="1276">mpu_set_accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</references>
        <references refid="group___d_r_i_v_e_r_s_1gad09e6031c8677adc0b8a39b6deea8e27" compoundref="inv__mpu_8c" startline="1181" endline="1211">mpu_set_gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" compoundref="inv__mpu_8c" startline="1319" endline="1345">mpu_set_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa01fb0872030e8e2932f8d1d257ea86a" compoundref="inv__mpu_8c" startline="178">gyro_reg_s::pwr_mgmt_1</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1cf6b7edfe37a51209897ccc448ec0e6" compoundref="inv__mpu_8c" startline="225">motion_int_cache_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gae5416a4097b0cf39460df70094bc474d" compoundref="inv__mpu_8c" startline="226">motion_int_cache_s::sensors_on</references>
        <references refid="group___d_r_i_v_e_r_s_1gafd5ebff6b0179e1dce0b68c2272cae07" compoundref="inv__mpu_8c" startline="681" endline="707">set_int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <references refid="group___d_r_i_v_e_r_s_1ga12505a7d8cd7c976e5571f27a6160d23" compoundref="inv__mpu_8c" startline="161">gyro_reg_s::user_ctrl</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gacc92fb1489ef32a04bcb6b0ebde4d657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_int_level</definition>
        <argsstring>(unsigned char active_low)</argsstring>
        <name>mpu_set_int_level</name>
        <param>
          <type>unsigned char</type>
          <declname>active_low</declname>
        </param>
        <briefdescription>
<para>Set interrupt level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">active_low</parametername>
</parameternamelist>
<parameterdescription>
<para>1 for active low, 0 for active high. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1867" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1867" bodyend="1871" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="74" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga6f12e54ae8c7f2dd77954f3ab619bbb9" compoundref="inv__mpu_8c" startline="263">chip_cfg_s::active_low_int</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga653cb855300bff9285ce4b8dca6a503b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_int_latched</definition>
        <argsstring>(unsigned char enable)</argsstring>
        <name>mpu_set_int_latched</name>
        <param>
          <type>unsigned char</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable latched interrupts. Any MPU register will clear the interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>1 to enable, 0 to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1879" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1879" bodyend="1897" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="75" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga6f12e54ae8c7f2dd77954f3ab619bbb9" compoundref="inv__mpu_8c" startline="263">chip_cfg_s::active_low_int</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8467782bedc44051c95643e303543655" compoundref="inv__mpu_8c" startline="394">BIT_ACTL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1f50796ca0363292d9ac9cc1d29d9225" compoundref="inv__mpu_8c" startline="396">BIT_ANY_RD_CLR</references>
        <references refid="group___d_r_i_v_e_r_s_1gadd12a8d89e1a4c4e008b12a96dd4c75d" compoundref="inv__mpu_8c" startline="397">BIT_BYPASS_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga588b5a95724c4a68c6868faa78fd3a7f" compoundref="inv__mpu_8c" startline="395">BIT_LATCH_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6d3a962d6435644c7ea68e7d65934636" compoundref="inv__mpu_8c" startline="251">chip_cfg_s::bypass_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gaae7bdbff2a1029245890b555b2d8d519" compoundref="inv__mpu_8c" startline="180">gyro_reg_s::int_pin_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga55ce40fc460a62829ec149edaccffe7c" compoundref="inv__mpu_8c" startline="265">chip_cfg_s::latched_int</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" compoundref="inv__mpu_8c" startline="888" endline="964">mpu_lp_accel_mode</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_dmp_state</definition>
        <argsstring>(unsigned char enable)</argsstring>
        <name>mpu_set_dmp_state</name>
        <param>
          <type>unsigned char</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/disable DMP support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>1 to turn on the DMP. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2377" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2377" bodyend="2409" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="77" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1d2ff55e17aae1459dfad61d76054b1b" compoundref="inv__mpu_8c" startline="269">chip_cfg_s::dmp_loaded</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5f42b7e1e740f2fb64427417e9e2dab7" compoundref="inv__mpu_8c" startline="271">chip_cfg_s::dmp_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" compoundref="inv__mpu_8c" startline="1092" endline="1147">mpu_reset_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga36f70f38371b48d81094d3b061233e15" compoundref="inv__mpu_8c" startline="1817" endline="1860">mpu_set_bypass</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gafd5ebff6b0179e1dce0b68c2272cae07" compoundref="inv__mpu_8c" startline="681" endline="707">set_int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gafe0f60ed0d7f8fd2dcd55d45b95a2363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_dmp_state</definition>
        <argsstring>(unsigned char *enabled)</argsstring>
        <name>mpu_get_dmp_state</name>
        <param>
          <type>unsigned char *</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Get DMP state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2416" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2416" bodyend="2420" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="78" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaa95c7e216dcb2d888e9796001ca555f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_lpf</definition>
        <argsstring>(unsigned short *lpf)</argsstring>
        <name>mpu_get_lpf</name>
        <param>
          <type>unsigned short *</type>
          <declname>lpf</declname>
        </param>
        <briefdescription>
<para>Get the current DLPF setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">lpf</parametername>
</parameternamelist>
<parameterdescription>
<para>Current LPF setting. 0 if successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1283" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1283" bodyend="1311" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="80" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a327619f406c6b2f6a221793881013508" compoundref="inv__mpu_8c" startline="313">INV_FILTER_10HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9ab58e52e0b6be4cbaf0c7f32705a9fcec" compoundref="inv__mpu_8c" startline="309">INV_FILTER_188HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9aebecb86604e475ed8e2cb68340010ff1" compoundref="inv__mpu_8c" startline="312">INV_FILTER_20HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a76de97a6c2f8eb3c5d1a73d717513f5d" compoundref="inv__mpu_8c" startline="315">INV_FILTER_2100HZ_NOLPF</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a9f0263fbbdccd3c5a18fcb65be278d24" compoundref="inv__mpu_8c" startline="308">INV_FILTER_256HZ_NOLPF2</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a995b18a52a5bd919aa9c1411a2292110" compoundref="inv__mpu_8c" startline="311">INV_FILTER_42HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9abdaaf85666fd6a490ee01dcd8a315678" compoundref="inv__mpu_8c" startline="314">INV_FILTER_5HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a0f288da0c97b325a6cb57f1223f0cf98" compoundref="inv__mpu_8c" startline="310">INV_FILTER_98HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1ga16ec8ca8298f62ac01419775377270fb" compoundref="inv__mpu_8c" startline="242">chip_cfg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_lpf</definition>
        <argsstring>(unsigned short lpf)</argsstring>
        <name>mpu_set_lpf</name>
        <param>
          <type>unsigned short</type>
          <declname>lpf</declname>
        </param>
        <briefdescription>
<para>Set digital low pass filter. The following LPF settings are supported: 188, 98, 42, 20, 10, 5. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lpf</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired LPF setting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1319" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1319" bodyend="1345" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="81" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a327619f406c6b2f6a221793881013508" compoundref="inv__mpu_8c" startline="313">INV_FILTER_10HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9ab58e52e0b6be4cbaf0c7f32705a9fcec" compoundref="inv__mpu_8c" startline="309">INV_FILTER_188HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9aebecb86604e475ed8e2cb68340010ff1" compoundref="inv__mpu_8c" startline="312">INV_FILTER_20HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a995b18a52a5bd919aa9c1411a2292110" compoundref="inv__mpu_8c" startline="311">INV_FILTER_42HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9abdaaf85666fd6a490ee01dcd8a315678" compoundref="inv__mpu_8c" startline="314">INV_FILTER_5HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1gga91c762a5bd71461f7911dc49ee7696e9a0f288da0c97b325a6cb57f1223f0cf98" compoundref="inv__mpu_8c" startline="310">INV_FILTER_98HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1ga22eeac0bd77e7d99b3e15dda52f1bd08" compoundref="inv__mpu_8c" startline="159">gyro_reg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga16ec8ca8298f62ac01419775377270fb" compoundref="inv__mpu_8c" startline="242">chip_cfg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" compoundref="inv__mpu_8c" startline="888" endline="964">mpu_lp_accel_mode</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaf973c32c73ba912ff512aab948fc31ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_gyro_fsr</definition>
        <argsstring>(unsigned short *fsr)</argsstring>
        <name>mpu_get_gyro_fsr</name>
        <param>
          <type>unsigned short *</type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Get the gyro full-scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current full-scale range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1154" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1154" bodyend="1174" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="83" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90aee922e0daa4fbb404c3db6c49d897a13" compoundref="inv__mpu_8c" startline="323">INV_FSR_1000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90ac0c37efc1c8acd6f70c0c5a768e5b8be" compoundref="inv__mpu_8c" startline="324">INV_FSR_2000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a5b8251a49db5cb8a676076b0b308ae35" compoundref="inv__mpu_8c" startline="321">INV_FSR_250DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a50901470ff389927fd010081e2b8fd09" compoundref="inv__mpu_8c" startline="322">INV_FSR_500DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gad09e6031c8677adc0b8a39b6deea8e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_gyro_fsr</definition>
        <argsstring>(unsigned short fsr)</argsstring>
        <name>mpu_set_gyro_fsr</name>
        <param>
          <type>unsigned short</type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Set the gyro full-scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired full-scale range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1181" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1181" bodyend="1211" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="84" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gada0b973f74cc874552f079fd58c435a6" compoundref="inv__mpu_8c" startline="163">gyro_reg_s::gyro_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90aee922e0daa4fbb404c3db6c49d897a13" compoundref="inv__mpu_8c" startline="323">INV_FSR_1000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90ac0c37efc1c8acd6f70c0c5a768e5b8be" compoundref="inv__mpu_8c" startline="324">INV_FSR_2000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a5b8251a49db5cb8a676076b0b308ae35" compoundref="inv__mpu_8c" startline="321">INV_FSR_250DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a50901470ff389927fd010081e2b8fd09" compoundref="inv__mpu_8c" startline="322">INV_FSR_500DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gab6087a15ee23db23b6aec41590329a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_accel_fsr</definition>
        <argsstring>(unsigned char *fsr)</argsstring>
        <name>mpu_get_accel_fsr</name>
        <param>
          <type>unsigned char *</type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Get the accel full-scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current full-scale range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1218" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1218" bodyend="1239" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="86" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gab72e3cead391dee41f28e041282d743f" compoundref="inv__mpu_8c" startline="256">chip_cfg_s::accel_half</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea6712e8563c97c11b458ef721d4f5f9d5" compoundref="inv__mpu_8c" startline="333">INV_FSR_16G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eae27c6f69463dab7de81fac0c51ff8aa7" compoundref="inv__mpu_8c" startline="330">INV_FSR_2G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eaa91e3a89d0bbd01149fe71148595be6d" compoundref="inv__mpu_8c" startline="331">INV_FSR_4G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea0a40371bdda397d234c53d0ee2f3be8b" compoundref="inv__mpu_8c" startline="332">INV_FSR_8G</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga15da67c0a6c94e0cdaceb8b165e13af9" compoundref="inv__mpu__dmp__motion__driver_8c" startline="722" endline="781">dmp_set_tap_thresh</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga2713a96af104cfb2ae8e0ed4c3718119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_accel_fsr</definition>
        <argsstring>(unsigned char fsr)</argsstring>
        <name>mpu_set_accel_fsr</name>
        <param>
          <type>unsigned char</type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Set the accel full-scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired full-scale range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1246" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1246" bodyend="1276" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="87" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gae93a446c54cc00bc7f11209d7af0025e" compoundref="inv__mpu_8c" startline="164">gyro_reg_s::accel_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea6712e8563c97c11b458ef721d4f5f9d5" compoundref="inv__mpu_8c" startline="333">INV_FSR_16G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eae27c6f69463dab7de81fac0c51ff8aa7" compoundref="inv__mpu_8c" startline="330">INV_FSR_2G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eaa91e3a89d0bbd01149fe71148595be6d" compoundref="inv__mpu_8c" startline="331">INV_FSR_4G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea0a40371bdda397d234c53d0ee2f3be8b" compoundref="inv__mpu_8c" startline="332">INV_FSR_8G</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gade8589573d09e0f14b84130428f286df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_compass_fsr</definition>
        <argsstring>(unsigned short *fsr)</argsstring>
        <name>mpu_get_compass_fsr</name>
        <param>
          <type>unsigned short *</type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Get the compass full-scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current full-scale range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2588" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2588" bodyend="2596" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="89" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga023c0cc94aa8f162dc33b15048a49421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_gyro_sens</definition>
        <argsstring>(float *sens)</argsstring>
        <name>mpu_get_gyro_sens</name>
        <param>
          <type>float *</type>
          <declname>sens</declname>
        </param>
        <briefdescription>
<para>Get gyro sensitivity scale factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>Conversion from hardware units to dps. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1458" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1458" bodyend="1477" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="91" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90aee922e0daa4fbb404c3db6c49d897a13" compoundref="inv__mpu_8c" startline="323">INV_FSR_1000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90ac0c37efc1c8acd6f70c0c5a768e5b8be" compoundref="inv__mpu_8c" startline="324">INV_FSR_2000DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a5b8251a49db5cb8a676076b0b308ae35" compoundref="inv__mpu_8c" startline="321">INV_FSR_250DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1gga83acdc0eb37e8bfe0c2ae2348ded0a90a50901470ff389927fd010081e2b8fd09" compoundref="inv__mpu_8c" startline="322">INV_FSR_500DPS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" compoundref="inv__mpu_8c" startline="2874" endline="2896">run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga620408949052b96e856cad920f856583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_accel_sens</definition>
        <argsstring>(unsigned short *sens)</argsstring>
        <name>mpu_get_accel_sens</name>
        <param>
          <type>unsigned short *</type>
          <declname>sens</declname>
        </param>
        <briefdescription>
<para>Get accel sensitivity scale factor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>Conversion from hardware units to g&apos;s. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1484" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1484" bodyend="1505" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="92" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gab72e3cead391dee41f28e041282d743f" compoundref="inv__mpu_8c" startline="256">chip_cfg_s::accel_half</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea6712e8563c97c11b458ef721d4f5f9d5" compoundref="inv__mpu_8c" startline="333">INV_FSR_16G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eae27c6f69463dab7de81fac0c51ff8aa7" compoundref="inv__mpu_8c" startline="330">INV_FSR_2G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81eaa91e3a89d0bbd01149fe71148595be6d" compoundref="inv__mpu_8c" startline="331">INV_FSR_4G</references>
        <references refid="group___d_r_i_v_e_r_s_1ggaec8501b935143099e5f729dee221a81ea0a40371bdda397d234c53d0ee2f3be8b" compoundref="inv__mpu_8c" startline="332">INV_FSR_8G</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafbd714aee6086836f70aaea847771669" compoundref="inv__mpu__dmp__motion__driver_8c" startline="632" endline="676">dmp_set_accel_bias</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" compoundref="inv__mpu_8c" startline="2874" endline="2896">run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga2487dd551b701c1c7ed4d6335f02b2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_sample_rate</definition>
        <argsstring>(unsigned short *rate)</argsstring>
        <name>mpu_get_sample_rate</name>
        <param>
          <type>unsigned short *</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Get sampling rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling rate (Hz). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1352" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1352" bodyend="1359" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="94" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_sample_rate</definition>
        <argsstring>(unsigned short rate)</argsstring>
        <name>mpu_set_sample_rate</name>
        <param>
          <type>unsigned short</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set sampling rate. Sampling rate must be between 4Hz and 1kHz. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired sampling rate (Hz). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1367" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1367" bodyend="1407" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="95" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga33e138d8a49744eb9b4ea0e9086cef1c" compoundref="inv__mpu_8c" startline="258">chip_cfg_s::lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1gac6afabdc09a49a433ee19d8a9486056d" compoundref="inv__mpu_8c" startline="62">min</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" compoundref="inv__mpu_8c" startline="888" endline="964">mpu_lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga78da3828de0ef9d080c4d03e7bc45e7b" compoundref="inv__mpu_8c" startline="1436" endline="1451">mpu_set_compass_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" compoundref="inv__mpu_8c" startline="1319" endline="1345">mpu_set_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga27dd9db31f16ca170520b3009255e6d0" compoundref="inv__mpu_8c" startline="158">gyro_reg_s::rate_div</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gab5a45cd7783f6937788c0decb0b18b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_compass_sample_rate</definition>
        <argsstring>(unsigned short *rate)</argsstring>
        <name>mpu_get_compass_sample_rate</name>
        <param>
          <type>unsigned short *</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Get compass sampling rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Current compass sampling rate (Hz). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1414" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1414" bodyend="1423" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="96" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga78da3828de0ef9d080c4d03e7bc45e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_compass_sample_rate</definition>
        <argsstring>(unsigned short rate)</argsstring>
        <name>mpu_set_compass_sample_rate</name>
        <param>
          <type>unsigned short</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set compass sampling rate. The compass on the auxiliary I2C bus is read by the MPU hardware at a maximum of 100Hz. The actual rate can be set to a fraction of the gyro sampling rate. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 WARNING: The new rate may be different than what was requested. Call mpu_get_compass_sample_rate to check the actual setting. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired compass sampling rate (Hz). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1436" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1436" bodyend="1451" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="97" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga093f11eb10b2639a4b9fe344ea348c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_fifo_config</definition>
        <argsstring>(unsigned char *sensors)</argsstring>
        <name>mpu_get_fifo_config</name>
        <param>
          <type>unsigned char *</type>
          <declname>sensors</declname>
        </param>
        <briefdescription>
<para>Get current FIFO configuration. <emphasis>sensors</emphasis> can contain a combination of the following flags: <linebreak/>
 INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO <linebreak/>
 INV_XYZ_GYRO <linebreak/>
 INV_XYZ_ACCEL </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of sensors in FIFO. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1516" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1516" bodyend="1520" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="99" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_configure_fifo</definition>
        <argsstring>(unsigned char sensors)</argsstring>
        <name>mpu_configure_fifo</name>
        <param>
          <type>unsigned char</type>
          <declname>sensors</declname>
        </param>
        <briefdescription>
<para>Select which sensors are pushed to FIFO. <emphasis>sensors</emphasis> can contain a combination of the following flags: <linebreak/>
 INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO <linebreak/>
 INV_XYZ_GYRO <linebreak/>
 INV_XYZ_ACCEL </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of sensors to push to FIFO. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1531" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1531" bodyend="1566" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="100" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga33e138d8a49744eb9b4ea0e9086cef1c" compoundref="inv__mpu_8c" startline="258">chip_cfg_s::lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" compoundref="inv__mpu_8c" startline="1092" endline="1147">mpu_reset_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gafd5ebff6b0179e1dce0b68c2272cae07" compoundref="inv__mpu_8c" startline="681" endline="707">set_int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" compoundref="inv__mpu_8c" startline="888" endline="964">mpu_lp_accel_mode</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaec8fa7a067988d174516bb735a4a0bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_power_state</definition>
        <argsstring>(unsigned char *power_on)</argsstring>
        <name>mpu_get_power_state</name>
        <param>
          <type>unsigned char *</type>
          <declname>power_on</declname>
        </param>
        <briefdescription>
<para>Get current power state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">power_on</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if turned on, 0 if suspended. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1573" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1573" bodyend="1580" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="102" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_sensors</definition>
        <argsstring>(unsigned char sensors)</argsstring>
        <name>mpu_set_sensors</name>
        <param>
          <type>unsigned char</type>
          <declname>sensors</declname>
        </param>
        <briefdescription>
<para>Turn specific sensors on/off. <emphasis>sensors</emphasis> can contain a combination of the following flags: <linebreak/>
 INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO <linebreak/>
 INV_XYZ_GYRO <linebreak/>
 INV_XYZ_ACCEL <linebreak/>
 INV_XYZ_COMPASS </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of sensors to wake. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1592" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1592" bodyend="1662" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="103" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gabcdedbd3098140aa14ad17bcaca8e176" compoundref="inv__mpu_8c" startline="393">BIT_AUX_IF_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga02c3e9ddd63128f1c3cf50bf1e9b5fe6" compoundref="inv__mpu_8c" startline="369">BIT_DMP_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1fed8bd436e9b7dfccb1cae99ca89103" compoundref="inv__mpu_8c" startline="384">BIT_SLEEP</references>
        <references refid="group___d_r_i_v_e_r_s_1ga82256fedeffe5b2443ab3ae34cf032d9" compoundref="inv__mpu_8c" startline="403">BIT_STBY_XG</references>
        <references refid="group___d_r_i_v_e_r_s_1ga04a57159e34387dafe9b86b171c4654c" compoundref="inv__mpu_8c" startline="406">BIT_STBY_XYZA</references>
        <references refid="group___d_r_i_v_e_r_s_1gabf1c0a844906a5e887a659971a4af417" compoundref="inv__mpu_8c" startline="404">BIT_STBY_YG</references>
        <references refid="group___d_r_i_v_e_r_s_1ga30967a4efdf3c3f1e39814e72a4168b0" compoundref="inv__mpu_8c" startline="405">BIT_STBY_ZG</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7bd5165d6e62cb0d814cf3401958445" compoundref="inv__mpu_8c" startline="243">chip_cfg_s::clk_src</references>
        <references refid="group___d_r_i_v_e_r_s_1gae36aca5baf9b6b7d74992aef00686d67" compoundref="inv__mpu_8c" startline="49">delay_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gga75570f009627c6f4ddfb2d936d81e207a01b240917a78674d3e387110a6a8f94c" compoundref="inv__mpu_8c" startline="340">INV_CLK_PLL</references>
        <references refid="group___d_r_i_v_e_r_s_1gabf02bf28541421d59f8be764f2b95407" compoundref="inv__mpu_8h" startline="29">INV_X_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" compoundref="inv__mpu_8h" startline="33">INV_XYZ_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" compoundref="inv__mpu_8h" startline="34">INV_XYZ_COMPASS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3fdc30f9c0a26c2c4e2bb88921f91629" compoundref="inv__mpu_8h" startline="32">INV_XYZ_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1gacdd8ff833a34dba08ca2aa145eb92b44" compoundref="inv__mpu_8h" startline="30">INV_Y_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1ga50205b5cc6089b33b2561c854eb8b0fd" compoundref="inv__mpu_8h" startline="31">INV_Z_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1ga33e138d8a49744eb9b4ea0e9086cef1c" compoundref="inv__mpu_8c" startline="258">chip_cfg_s::lp_accel_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga36f70f38371b48d81094d3b061233e15" compoundref="inv__mpu_8c" startline="1817" endline="1860">mpu_set_bypass</references>
        <references refid="group___d_r_i_v_e_r_s_1ga653cb855300bff9285ce4b8dca6a503b" compoundref="inv__mpu_8c" startline="1879" endline="1897">mpu_set_int_latched</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa01fb0872030e8e2932f8d1d257ea86a" compoundref="inv__mpu_8c" startline="178">gyro_reg_s::pwr_mgmt_1</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e378b0c77e9529ee93ac6eba11e1031" compoundref="inv__mpu_8c" startline="179">gyro_reg_s::pwr_mgmt_2</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <references refid="group___d_r_i_v_e_r_s_1ga12505a7d8cd7c976e5571f27a6160d23" compoundref="inv__mpu_8c" startline="161">gyro_reg_s::user_ctrl</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" compoundref="inv__mpu_8c" startline="2642" endline="2848">mpu_lp_motion_interrupt</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga4968cc2ec80f0da0d72436551c81f134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_set_accel_bias</definition>
        <argsstring>(const long *accel_bias)</argsstring>
        <name>mpu_set_accel_bias</name>
        <param>
          <type>const long *</type>
          <declname>accel_bias</declname>
        </param>
        <briefdescription>
<para>Push biases to the accel bias registers. This function expects biases relative to the current sensor output, and these biases will be added to the factory-supplied values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">accel_bias</parametername>
</parameternamelist>
<parameterdescription>
<para>New biases. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1043" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1043" bodyend="1086" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="105" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga5555854590ad11495c0e30401294bae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_gyro_reg</definition>
        <argsstring>(short *data, unsigned long *timestamp)</argsstring>
        <name>mpu_get_gyro_reg</name>
        <param>
          <type>short *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Read raw gyro data directly from the registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data in hardware units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp in milliseconds. Null if not needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="972" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="972" bodyend="987" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="108" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e6b6bc6d1cd2956353a31bfadd3c332" compoundref="inv__mpu_8c" startline="50">get_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3fdc30f9c0a26c2c4e2bb88921f91629" compoundref="inv__mpu_8h" startline="32">INV_XYZ_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1gab5c2246c44bb36b21596fe5acf7ec0d4" compoundref="inv__mpu_8c" startline="171">gyro_reg_s::raw_gyro</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gae4ae960e5df78049ece2647772a3d809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_accel_reg</definition>
        <argsstring>(short *data, unsigned long *timestamp)</argsstring>
        <name>mpu_get_accel_reg</name>
        <param>
          <type>short *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Read raw accel data directly from the registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data in hardware units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp in milliseconds. Null if not needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="995" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="995" bodyend="1010" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="109" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e6b6bc6d1cd2956353a31bfadd3c332" compoundref="inv__mpu_8c" startline="50">get_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" compoundref="inv__mpu_8h" startline="33">INV_XYZ_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga9b7c162cea6a3deeaac41444c613b7bc" compoundref="inv__mpu_8c" startline="172">gyro_reg_s::raw_accel</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga65e6b0ce980b8c0255d7be9b55c88c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_compass_reg</definition>
        <argsstring>(short *data, unsigned long *timestamp)</argsstring>
        <name>mpu_get_compass_reg</name>
        <param>
          <type>short *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Read raw compass data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data in hardware units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp in milliseconds. Null if not needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2535" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2535" bodyend="2581" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="110" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e6b6bc6d1cd2956353a31bfadd3c332" compoundref="inv__mpu_8c" startline="50">get_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" compoundref="inv__mpu_8h" startline="34">INV_XYZ_COMPASS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaa449b565a157b4b8ca0f491b7ed46018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_temperature</definition>
        <argsstring>(long *data, unsigned long *timestamp)</argsstring>
        <name>mpu_get_temperature</name>
        <param>
          <type>long *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Read temperature data directly from the registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data in q16 format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp in milliseconds. Null if not needed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1018" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1018" bodyend="1034" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="111" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e6b6bc6d1cd2956353a31bfadd3c332" compoundref="inv__mpu_8c" startline="50">get_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <references refid="group___d_r_i_v_e_r_s_1ga47674fab0681811c1b733462944e0233" compoundref="inv__mpu_8c" startline="173">gyro_reg_s::temp</references>
        <references refid="group___d_r_i_v_e_r_s_1ga56f98c91a7c4d60ccea1ade1f3e88d04" compoundref="inv__mpu_8c" startline="210">hw_s::temp_offset</references>
        <references refid="group___d_r_i_v_e_r_s_1gab2397f792a86b32b0957c24e3912bc63" compoundref="inv__mpu_8c" startline="209">hw_s::temp_sens</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga0afd02d8c76d3278b488ef7038c26e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_get_int_status</definition>
        <argsstring>(short *status)</argsstring>
        <name>mpu_get_int_status</name>
        <param>
          <type>short *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Read the MPU interrupt status registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupt bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1669" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1669" bodyend="1678" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="113" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaea6ad456241786750b3f211bc92032eb" compoundref="inv__mpu_8c" startline="175">gyro_reg_s::dmp_int_status</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga2da20453aafbbba4a0f6fb9fbdd25572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_read_fifo</definition>
        <argsstring>(short *gyro, short *accel, unsigned long *timestamp, unsigned char *sensors, unsigned char *more)</argsstring>
        <name>mpu_read_fifo</name>
        <param>
          <type>short *</type>
          <declname>gyro</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>accel</declname>
        </param>
        <param>
          <type>unsigned long *</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>sensors</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>more</declname>
        </param>
        <briefdescription>
<para>Get one packet from the FIFO. If <emphasis>sensors</emphasis> does not contain a particular sensor, disregard the data returned to that pointer. <linebreak/>
 <emphasis>sensors</emphasis> can contain a combination of the following flags: <linebreak/>
 INV_X_GYRO, INV_Y_GYRO, INV_Z_GYRO <linebreak/>
 INV_XYZ_GYRO <linebreak/>
 INV_XYZ_ACCEL <linebreak/>
 If the FIFO has no new data, <emphasis>sensors</emphasis> will be zero. <linebreak/>
 If the FIFO is disabled, <emphasis>sensors</emphasis> will be zero and this function will return a non-zero error code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">gyro</parametername>
</parameternamelist>
<parameterdescription>
<para>Gyro data in hardware units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">accel</parametername>
</parameternamelist>
<parameterdescription>
<para>Accel data in hardware units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp in milliseconds. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of sensors read from FIFO. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">more</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of remaining packets. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1698" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1698" bodyend="1770" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="114" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gafb9b49ce5dd973b3c29ae72680924fa7" compoundref="inv__mpu_8c" startline="372">BIT_FIFO_OVERFLOW</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7503974d62cf9c2d688579fcd1abd48" compoundref="inv__mpu_8c" startline="169">gyro_reg_s::fifo_count_h</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb6763dc5f368ea01ef7c733cea9dab4" compoundref="inv__mpu_8c" startline="170">gyro_reg_s::fifo_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3e6b6bc6d1cd2956353a31bfadd3c332" compoundref="inv__mpu_8c" startline="50">get_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga837724080c34ff5a190751427febaf91" compoundref="inv__mpu_8c" startline="176">gyro_reg_s::int_status</references>
        <references refid="group___d_r_i_v_e_r_s_1gabf02bf28541421d59f8be764f2b95407" compoundref="inv__mpu_8h" startline="29">INV_X_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" compoundref="inv__mpu_8h" startline="33">INV_XYZ_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1gacdd8ff833a34dba08ca2aa145eb92b44" compoundref="inv__mpu_8h" startline="30">INV_Y_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1ga50205b5cc6089b33b2561c854eb8b0fd" compoundref="inv__mpu_8h" startline="31">INV_Z_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5f77e9f55285abb4d214b80281f69c1f" compoundref="inv__mpu_8c" startline="207">hw_s::max_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga973c680573b37fc359fc68d0707da355" compoundref="inv__mpu_8c" startline="667">MAX_PACKET_LENGTH</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" compoundref="inv__mpu_8c" startline="1092" endline="1147">mpu_reset_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga13593044949b460e9f571eb57e9a0788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_read_fifo_stream</definition>
        <argsstring>(unsigned short length, unsigned char *data, unsigned char *more)</argsstring>
        <name>mpu_read_fifo_stream</name>
        <param>
          <type>unsigned short</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>more</declname>
        </param>
        <briefdescription>
<para>Get one unparsed packet from the FIFO. This function should be used if the packet is to be parsed elsewhere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of one FIFO packet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO packet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">more</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of remaining packets. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1779" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1779" bodyend="1810" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="116" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gafb9b49ce5dd973b3c29ae72680924fa7" compoundref="inv__mpu_8c" startline="372">BIT_FIFO_OVERFLOW</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7503974d62cf9c2d688579fcd1abd48" compoundref="inv__mpu_8c" startline="169">gyro_reg_s::fifo_count_h</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb6763dc5f368ea01ef7c733cea9dab4" compoundref="inv__mpu_8c" startline="170">gyro_reg_s::fifo_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga837724080c34ff5a190751427febaf91" compoundref="inv__mpu_8c" startline="176">gyro_reg_s::int_status</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5f77e9f55285abb4d214b80281f69c1f" compoundref="inv__mpu_8c" startline="207">hw_s::max_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" compoundref="inv__mpu_8c" startline="1092" endline="1147">mpu_reset_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga02db5f25359abe84be002c543cdc3803" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1268" endline="1347">dmp_read_fifo</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_reset_fifo</definition>
        <argsstring>(void)</argsstring>
        <name>mpu_reset_fifo</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset FIFO read/write pointers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="1092" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="1092" bodyend="1147" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="118" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gabcdedbd3098140aa14ad17bcaca8e176" compoundref="inv__mpu_8c" startline="393">BIT_AUX_IF_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga45eec9dbc46778c356703dcf90b9e0c3" compoundref="inv__mpu_8c" startline="373">BIT_DATA_RDY_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga02c3e9ddd63128f1c3cf50bf1e9b5fe6" compoundref="inv__mpu_8c" startline="369">BIT_DMP_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4dc5309ed09fc683d8e5a247feaad69d" compoundref="inv__mpu_8c" startline="374">BIT_DMP_INT_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1ga37d5ceb74c3568e4bab6dcdd0afaa95b" compoundref="inv__mpu_8c" startline="371">BIT_DMP_RST</references>
        <references refid="group___d_r_i_v_e_r_s_1gae3c4a18accb84992faaf2534a84a147c" compoundref="inv__mpu_8c" startline="368">BIT_FIFO_EN</references>
        <references refid="group___d_r_i_v_e_r_s_1gaeae2cc64314ad05f3a93d2358a2369db" compoundref="inv__mpu_8c" startline="370">BIT_FIFO_RST</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6d3a962d6435644c7ea68e7d65934636" compoundref="inv__mpu_8c" startline="251">chip_cfg_s::bypass_mode</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gae36aca5baf9b6b7d74992aef00686d67" compoundref="inv__mpu_8c" startline="49">delay_ms</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6a392b7ecae843c734db3d832f11af49" compoundref="inv__mpu_8c" startline="162">gyro_reg_s::fifo_en</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1ga48b47844d4b0570e60aa6806faa59eae" compoundref="inv__mpu_8c" startline="174">gyro_reg_s::int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa366c36057f31e6e0d4cf2ca4a1ef52f" compoundref="inv__mpu_8c" startline="249">chip_cfg_s::int_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" compoundref="inv__mpu_8h" startline="34">INV_XYZ_COMPASS</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <references refid="group___d_r_i_v_e_r_s_1ga12505a7d8cd7c976e5571f27a6160d23" compoundref="inv__mpu_8c" startline="161">gyro_reg_s::user_ctrl</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaac712ef33727433f666b3861894873be" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1176" endline="1190">dmp_enable_6x_lp_quat</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga70c485bdfa30515e5b869b081192caa1" compoundref="inv__mpu__dmp__motion__driver_8c" startline="997" endline="1112">dmp_enable_feature</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga4ee4339b79a58558d121ba8206056394" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1152" endline="1167">dmp_enable_lp_quat</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga02db5f25359abe84be002c543cdc3803" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1268" endline="1347">dmp_read_fifo</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga2da20453aafbbba4a0f6fb9fbdd25572" compoundref="inv__mpu_8c" startline="1698" endline="1770">mpu_read_fifo</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga13593044949b460e9f571eb57e9a0788" compoundref="inv__mpu_8c" startline="1779" endline="1810">mpu_read_fifo_stream</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gafea59910bc3dd30ba3356b1c75213a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_write_mem</definition>
        <argsstring>(unsigned short mem_addr, unsigned short length, unsigned char *data)</argsstring>
        <name>mpu_write_mem</name>
        <param>
          <type>unsigned short</type>
          <declname>mem_addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write to the DMP memory. This function prevents I2C writes past the bank boundaries. The DMP memory is only accessible when the chip is awake. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mem_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory location (bank &lt;&lt; 8 | start address) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes to write to memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2271" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2271" bodyend="2293" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="120" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf1b74c33fa828ea4dc172bfbaaf47216" compoundref="inv__mpu_8c" startline="184">gyro_reg_s::bank_sel</references>
        <references refid="group___d_r_i_v_e_r_s_1gaef4a2014cd6e3d5faeb8f713ee3606ed" compoundref="inv__mpu_8c" startline="211">hw_s::bank_size</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gae17166b43fa12a960c0eced9a3c04bf0" compoundref="inv__mpu_8c" startline="181">gyro_reg_s::mem_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaac712ef33727433f666b3861894873be" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1176" endline="1190">dmp_enable_6x_lp_quat</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga70c485bdfa30515e5b869b081192caa1" compoundref="inv__mpu__dmp__motion__driver_8c" startline="997" endline="1112">dmp_enable_feature</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga653ebcec6758f006dd89939e8f3c6ebb" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1134" endline="1143">dmp_enable_gyro_cal</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga4ee4339b79a58558d121ba8206056394" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1152" endline="1167">dmp_enable_lp_quat</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafbd714aee6086836f70aaea847771669" compoundref="inv__mpu__dmp__motion__driver_8c" startline="632" endline="676">dmp_set_accel_bias</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga5399728fd572a7694af20286cc9d4121" compoundref="inv__mpu__dmp__motion__driver_8c" startline="684" endline="703">dmp_set_fifo_rate</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga4766e37ef95cbf0044c8f9594ed811d1" compoundref="inv__mpu__dmp__motion__driver_8c" startline="580" endline="624">dmp_set_gyro_bias</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaf10c08103d2aec9aa5555a5694bafced" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1229" endline="1246">dmp_set_interrupt_mode</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga6cb5ff144ce6e1546f00809de8bb24a4" compoundref="inv__mpu__dmp__motion__driver_8c" startline="525" endline="568">dmp_set_orientation</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga568562c19998f585b1d2ba056cd209db" compoundref="inv__mpu__dmp__motion__driver_8c" startline="931" endline="940">dmp_set_pedometer_step_count</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga62f469269047f8cba16a2b7f5349acc0" compoundref="inv__mpu__dmp__motion__driver_8c" startline="967" endline="978">dmp_set_pedometer_walk_time</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga62efdae1330d5bcaf4c75b069ded0ed0" compoundref="inv__mpu__dmp__motion__driver_8c" startline="858" endline="867">dmp_set_shake_reject_thresh</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga09d7a6d90e1bd2e907f1866d850c5608" compoundref="inv__mpu__dmp__motion__driver_8c" startline="877" endline="885">dmp_set_shake_reject_time</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga5d44d1a32535000e6902cdc5224d1b54" compoundref="inv__mpu__dmp__motion__driver_8c" startline="895" endline="903">dmp_set_shake_reject_timeout</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga66bc5c8fc26fcb498df53fc62aa87e4f" compoundref="inv__mpu__dmp__motion__driver_8c" startline="788" endline="799">dmp_set_tap_axes</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga819f947b2cb107ada7b9a94c41be0dad" compoundref="inv__mpu__dmp__motion__driver_8c" startline="806" endline="817">dmp_set_tap_count</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga15da67c0a6c94e0cdaceb8b165e13af9" compoundref="inv__mpu__dmp__motion__driver_8c" startline="722" endline="781">dmp_set_tap_thresh</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga97466067f4a23368f4d7e2547fe359d9" compoundref="inv__mpu__dmp__motion__driver_8c" startline="824" endline="833">dmp_set_tap_time</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaeca250a90eb816eb2609229849481337" compoundref="inv__mpu__dmp__motion__driver_8c" startline="840" endline="849">dmp_set_tap_time_multi</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga8fbdfe1a50285d4ab438e29c2efc70f5" compoundref="inv__mpu_8c" startline="2336" endline="2370">mpu_load_firmware</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga3374bececb6743893c9eab27645c1182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_read_mem</definition>
        <argsstring>(unsigned short mem_addr, unsigned short length, unsigned char *data)</argsstring>
        <name>mpu_read_mem</name>
        <param>
          <type>unsigned short</type>
          <declname>mem_addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read from the DMP memory. This function prevents I2C reads past the bank boundaries. The DMP memory is only accessible when the chip is awake. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mem_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory location (bank &lt;&lt; 8 | start address) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes read from memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2304" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2304" bodyend="2326" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="122" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf1b74c33fa828ea4dc172bfbaaf47216" compoundref="inv__mpu_8c" startline="184">gyro_reg_s::bank_sel</references>
        <references refid="group___d_r_i_v_e_r_s_1gaef4a2014cd6e3d5faeb8f713ee3606ed" compoundref="inv__mpu_8c" startline="211">hw_s::bank_size</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="group___d_r_i_v_e_r_s_1gae17166b43fa12a960c0eced9a3c04bf0" compoundref="inv__mpu_8c" startline="181">gyro_reg_s::mem_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gad8f4d1a93e0f03d950559501c5a7255b" compoundref="inv__mpu__dmp__motion__driver_8c" startline="910" endline="922">dmp_get_pedometer_step_count</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga62c8e5e99986b0e60ca0dc9a9b9c3fcc" compoundref="inv__mpu__dmp__motion__driver_8c" startline="947" endline="959">dmp_get_pedometer_walk_time</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</referencedby>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga8fbdfe1a50285d4ab438e29c2efc70f5" compoundref="inv__mpu_8c" startline="2336" endline="2370">mpu_load_firmware</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga8fbdfe1a50285d4ab438e29c2efc70f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_load_firmware</definition>
        <argsstring>(unsigned short length, const unsigned char *firmware, unsigned short start_addr, unsigned short sample_rate)</argsstring>
        <name>mpu_load_firmware</name>
        <param>
          <type>unsigned short</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>firmware</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>start_addr</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>sample_rate</declname>
        </param>
        <briefdescription>
<para>Load and verify DMP image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of DMP image. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">firmware</parametername>
</parameternamelist>
<parameterdescription>
<para>DMP code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting address of DMP code memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sample_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Fixed sampling rate used when DMP is enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2336" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2336" bodyend="2370" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="124" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1d2ff55e17aae1459dfad61d76054b1b" compoundref="inv__mpu_8c" startline="269">chip_cfg_s::dmp_loaded</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5f42b7e1e740f2fb64427417e9e2dab7" compoundref="inv__mpu_8c" startline="271">chip_cfg_s::dmp_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa248719e0ea03e6601004693d74890e0" compoundref="inv__mpu_8c" startline="47">i2c_write</references>
        <references refid="inv__mpu_8c_1a7750730ae7e5c713b619e347d44185fe">LOAD_CHUNK</references>
        <references refid="group___d_r_i_v_e_r_s_1gac6afabdc09a49a433ee19d8a9486056d" compoundref="inv__mpu_8c" startline="62">min</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3374bececb6743893c9eab27645c1182" compoundref="inv__mpu_8c" startline="2304" endline="2326">mpu_read_mem</references>
        <references refid="group___d_r_i_v_e_r_s_1gafea59910bc3dd30ba3356b1c75213a5f" compoundref="inv__mpu_8c" startline="2271" endline="2293">mpu_write_mem</references>
        <references refid="group___d_r_i_v_e_r_s_1gaac4aac12b0e82272affd408b24dc9c95" compoundref="inv__mpu_8c" startline="186">gyro_reg_s::prgm_start_h</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga66626a842452f444e9af29cb0d2c6150" compoundref="inv__mpu__dmp__motion__driver_8c" startline="512" endline="516">dmp_load_motion_driver_firmware</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga0e1201ecfd8453f1d89e4299528baaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_reg_dump</definition>
        <argsstring>(void)</argsstring>
        <name>mpu_reg_dump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Register dump for testing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="713" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="713" bodyend="726" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="127" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb6763dc5f368ea01ef7c733cea9dab4" compoundref="inv__mpu_8c" startline="170">gyro_reg_s::fifo_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2905fba7885cd95057e1655cb4d16bda" compoundref="inv__mpu_8c" startline="57">log_i</references>
        <references refid="group___d_r_i_v_e_r_s_1gae17166b43fa12a960c0eced9a3c04bf0" compoundref="inv__mpu_8c" startline="181">gyro_reg_s::mem_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1039fa66b110194727938cd86be8c3c5" compoundref="inv__mpu_8c" startline="208">hw_s::num_reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga5c35a3363337014e11769a0ea7c0dfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_read_reg</definition>
        <argsstring>(unsigned char reg, unsigned char *data)</argsstring>
        <name>mpu_read_reg</name>
        <param>
          <type>unsigned char</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read from a single register. NOTE: The memory and FIFO read/write registers cannot be accessed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Register data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="735" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="735" bodyend="742" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="128" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gacb482b60b4bc425c2990da9cf7cbdfee" compoundref="inv__mpu_8c" startline="206">hw_s::addr</references>
        <references refid="group___d_r_i_v_e_r_s_1gacb6763dc5f368ea01ef7c733cea9dab4" compoundref="inv__mpu_8c" startline="170">gyro_reg_s::fifo_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1gac280ecd767872a9664737fce8dd8e07b" compoundref="inv__mpu_8c" startline="301">gyro_state_s::hw</references>
        <references refid="group___d_r_i_v_e_r_s_1ga838d8f1c7b0d8cc83923b93bbafe1b33" compoundref="inv__mpu_8c" startline="48">i2c_read</references>
        <references refid="group___d_r_i_v_e_r_s_1gae17166b43fa12a960c0eced9a3c04bf0" compoundref="inv__mpu_8c" startline="181">gyro_reg_s::mem_r_w</references>
        <references refid="group___d_r_i_v_e_r_s_1ga1039fa66b110194727938cd86be8c3c5" compoundref="inv__mpu_8c" startline="208">hw_s::num_reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga458ad7d19aa1dc020276ec0d36951d0d" compoundref="inv__mpu_8c" startline="300">gyro_state_s::reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5448c351fc95ff052b110eee80e5f75c" compoundref="inv__mpu_8c" startline="489">reg</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_run_self_test</definition>
        <argsstring>(long *gyro, long *accel)</argsstring>
        <name>mpu_run_self_test</name>
        <param>
          <type>long *</type>
          <declname>gyro</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>accel</declname>
        </param>
        <briefdescription>
<para>Trigger gyro/accel/compass self-test. On success/error, the self-test returns a mask representing the sensor(s) that failed. For each bit, a one (1) represents a &quot;pass&quot; case; conversely, a zero (0) indicates a failure. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 The mask is defined as follows: <linebreak/>
 Bit 0: Gyro. <linebreak/>
 Bit 1: Accel. <linebreak/>
 Bit 2: Compass.</para>
<para><linebreak/>
 Currently, the hardware self-test is unsupported for MPU6500. However, this function can still be used to obtain the accel and gyro biases.</para>
<para><linebreak/>
 This function must be called with the device either face-up or face-down (z-axis is parallel to gravity). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">gyro</parametername>
</parameternamelist>
<parameterdescription>
<para>Gyro biases in q16 format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">accel</parametername>
</parameternamelist>
<parameterdescription>
<para>Accel biases (if applicable) in q16 format. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result mask (see above). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2169" column="5" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2169" bodyend="2260" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="129" declcolumn="5"/>
        <references refid="group___d_r_i_v_e_r_s_1gaf66873be1446ed552812e32d40eced61" compoundref="inv__mpu_8c" startline="238">chip_cfg_s::accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaab48ddb3bd05cea3f0fc85a68db9934d" compoundref="inv__mpu_8c" startline="1925" endline="1943">accel_self_test</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8881b9ec8b8009515310301f33abdeaf" compoundref="inv__mpu_8c" startline="302">gyro_state_s::chip_cfg</references>
        <references refid="group___d_r_i_v_e_r_s_1gab7bd5165d6e62cb0d814cf3401958445" compoundref="inv__mpu_8c" startline="243">chip_cfg_s::clk_src</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4783ed8aa79a3b5de798963819997c38" compoundref="inv__mpu_8c" startline="267">chip_cfg_s::dmp_on</references>
        <references refid="group___d_r_i_v_e_r_s_1ga88143c31b894bcd819c0e49b0ff267aa" compoundref="inv__mpu_8c" startline="247">chip_cfg_s::fifo_enable</references>
        <references refid="group___d_r_i_v_e_r_s_1ga8d087842b07e9710be2267adea4b497a" compoundref="inv__mpu_8c" startline="2029" endline="2147">get_st_biases</references>
        <references refid="group___d_r_i_v_e_r_s_1gab45a727aeee17380828a3e20ccb375c2" compoundref="inv__mpu_8c" startline="236">chip_cfg_s::gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga267d6f443d5be8b2a7a06aa007116f7a" compoundref="inv__mpu_8c" startline="1945" endline="1972">gyro_self_test</references>
        <references refid="group___d_r_i_v_e_r_s_1gga75570f009627c6f4ddfb2d936d81e207a01b240917a78674d3e387110a6a8f94c" compoundref="inv__mpu_8c" startline="340">INV_CLK_PLL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga16ec8ca8298f62ac01419775377270fb" compoundref="inv__mpu_8c" startline="242">chip_cfg_s::lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1gab6087a15ee23db23b6aec41590329a60" compoundref="inv__mpu_8c" startline="1218" endline="1239">mpu_get_accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga093f11eb10b2639a4b9fe344ea348c54" compoundref="inv__mpu_8c" startline="1516" endline="1520">mpu_get_fifo_config</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf973c32c73ba912ff512aab948fc31ca" compoundref="inv__mpu_8c" startline="1154" endline="1174">mpu_get_gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa95c7e216dcb2d888e9796001ca555f8" compoundref="inv__mpu_8c" startline="1283" endline="1311">mpu_get_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2487dd551b701c1c7ed4d6335f02b2f1" compoundref="inv__mpu_8c" startline="1352" endline="1359">mpu_get_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2713a96af104cfb2ae8e0ed4c3718119" compoundref="inv__mpu_8c" startline="1246" endline="1276">mpu_set_accel_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</references>
        <references refid="group___d_r_i_v_e_r_s_1gad09e6031c8677adc0b8a39b6deea8e27" compoundref="inv__mpu_8c" startline="1181" endline="1211">mpu_set_gyro_fsr</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" compoundref="inv__mpu_8c" startline="1319" endline="1345">mpu_set_lpf</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga2660470fcf7b53e2e832a397cbe6c354" compoundref="inv__mpu_8c" startline="245">chip_cfg_s::sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa996fc14aa630e53823462baf460c13f" compoundref="inv__mpu_8c" startline="240">chip_cfg_s::sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3854b4875f6db26c2a1a707885f1fc78" compoundref="inv__mpu_8c" startline="577">st</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" compoundref="inv__mpu_8c" startline="2874" endline="2896">run_self_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga0d528114a4e355a10ffd354a4c89a17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpu_register_tap_cb</definition>
        <argsstring>(void(*func)(unsigned char, unsigned char))</argsstring>
        <name>mpu_register_tap_cb</name>
        <param>
          <type>void(*)(unsigned char, unsigned char)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" line="130" column="5" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="130" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gafa3071c8321f6e8dd2036be8a1e57ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mget_ms</definition>
        <argsstring>(unsigned long *time)</argsstring>
        <name>mget_ms</name>
        <param>
          <type>unsigned long *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2933" column="6" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2933" bodyend="2933" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga2b58dae1c0567f3f9f6dcbfb07476de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short</type>
        <definition>unsigned short inv_row_2_scale</definition>
        <argsstring>(const signed char *row)</argsstring>
        <name>inv_row_2_scale</name>
        <param>
          <type>const signed char *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2914" column="16" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2914" bodyend="2931" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="133" declcolumn="16"/>
        <referencedby refid="group___d_r_i_v_e_r_s_1ga3ff6037a69f37bb6174355936ad67ef3" compoundref="inv__mpu_8c" startline="2898" endline="2912">inv_orientation_matrix_to_scalar</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1ga3ff6037a69f37bb6174355936ad67ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short</type>
        <definition>unsigned short inv_orientation_matrix_to_scalar</definition>
        <argsstring>(const signed char *mtx)</argsstring>
        <name>inv_orientation_matrix_to_scalar</name>
        <param>
          <type>const signed char *</type>
          <declname>mtx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2898" column="16" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2898" bodyend="2912" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="134" declcolumn="16"/>
        <references refid="group___d_r_i_v_e_r_s_1ga2b58dae1c0567f3f9f6dcbfb07476de7" compoundref="inv__mpu_8c" startline="2914" endline="2931">inv_row_2_scale</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
        <definition>u8 run_self_test</definition>
        <argsstring>(void)</argsstring>
        <name>run_self_test</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2874" column="4" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2874" bodyend="2896" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="135" declcolumn="4"/>
        <references refid="group___d_r_i_v_e_r_s_1gafbd714aee6086836f70aaea847771669" compoundref="inv__mpu__dmp__motion__driver_8c" startline="632" endline="676">dmp_set_accel_bias</references>
        <references refid="group___d_r_i_v_e_r_s_1ga4766e37ef95cbf0044c8f9594ed811d1" compoundref="inv__mpu__dmp__motion__driver_8c" startline="580" endline="624">dmp_set_gyro_bias</references>
        <references refid="group___d_r_i_v_e_r_s_1ga620408949052b96e856cad920f856583" compoundref="inv__mpu_8c" startline="1484" endline="1505">mpu_get_accel_sens</references>
        <references refid="group___d_r_i_v_e_r_s_1ga023c0cc94aa8f162dc33b15048a49421" compoundref="inv__mpu_8c" startline="1458" endline="1477">mpu_get_gyro_sens</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" compoundref="inv__mpu_8c" startline="2169" endline="2260">mpu_run_self_test</references>
        <referencedby refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" compoundref="inv__mpu_8c" startline="2937" endline="2963">mpu_dmp_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
        <definition>u8 mpu_dmp_init</definition>
        <argsstring>(void)</argsstring>
        <name>mpu_dmp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2937" column="4" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2937" bodyend="2963" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="136" declcolumn="4"/>
        <references refid="group___d_r_i_v_e_r_s_1ga292d717406e906831952ce46612fe4cd" compoundref="inv__mpu_8h" startline="27">DEFAULT_MPU_HZ</references>
        <references refid="group___d_r_i_v_e_r_s_1ga70c485bdfa30515e5b869b081192caa1" compoundref="inv__mpu__dmp__motion__driver_8c" startline="997" endline="1112">dmp_enable_feature</references>
        <references refid="group___d_r_i_v_e_r_s_1gae879a3c9729f9e1be5e6d7c9211c69c0" compoundref="inv__mpu__dmp__motion__driver_8h" startline="44">DMP_FEATURE_6X_LP_QUAT</references>
        <references refid="group___d_r_i_v_e_r_s_1gaf2b250fc928390d562f7bd80300ce419" compoundref="inv__mpu__dmp__motion__driver_8h" startline="41">DMP_FEATURE_ANDROID_ORIENT</references>
        <references refid="group___d_r_i_v_e_r_s_1gaaf0ac890c1f83106c08b722f1e865fdb" compoundref="inv__mpu__dmp__motion__driver_8h" startline="45">DMP_FEATURE_GYRO_CAL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga40462c6fd55b04b2f79723dd737ee795" compoundref="inv__mpu__dmp__motion__driver_8h" startline="48">DMP_FEATURE_SEND_CAL_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1ga9eeb257febe4a305df7ad4cf31dc2755" compoundref="inv__mpu__dmp__motion__driver_8h" startline="46">DMP_FEATURE_SEND_RAW_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga87fac39cf95e2c56afdf507a986fa00b" compoundref="inv__mpu__dmp__motion__driver_8h" startline="40">DMP_FEATURE_TAP</references>
        <references refid="group___d_r_i_v_e_r_s_1ga66626a842452f444e9af29cb0d2c6150" compoundref="inv__mpu__dmp__motion__driver_8c" startline="512" endline="516">dmp_load_motion_driver_firmware</references>
        <references refid="group___d_r_i_v_e_r_s_1ga5399728fd572a7694af20286cc9d4121" compoundref="inv__mpu__dmp__motion__driver_8c" startline="684" endline="703">dmp_set_fifo_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6cb5ff144ce6e1546f00809de8bb24a4" compoundref="inv__mpu__dmp__motion__driver_8c" startline="525" endline="568">dmp_set_orientation</references>
        <references refid="group___d_r_i_v_e_r_s_1gadcca9e3dfdbc53cc5509fabdaede02b8" compoundref="inv__mpu_8c" startline="2868">gyro_orientation</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3ff6037a69f37bb6174355936ad67ef3" compoundref="inv__mpu_8c" startline="2898" endline="2912">inv_orientation_matrix_to_scalar</references>
        <references refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" compoundref="inv__mpu_8h" startline="33">INV_XYZ_ACCEL</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3fdc30f9c0a26c2c4e2bb88921f91629" compoundref="inv__mpu_8h" startline="32">INV_XYZ_GYRO</references>
        <references refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" compoundref="inv__mpu_8c" startline="1531" endline="1566">mpu_configure_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" compoundref="inv__mpu_8c" startline="757" endline="871">mpu_init</references>
        <references refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" compoundref="inv__mpu_8c" startline="2377" endline="2409">mpu_set_dmp_state</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" compoundref="inv__mpu_8c" startline="1367" endline="1407">mpu_set_sample_rate</references>
        <references refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" compoundref="inv__mpu_8c" startline="1592" endline="1662">mpu_set_sensors</references>
        <references refid="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" compoundref="inv__mpu_8c" startline="2874" endline="2896">run_self_test</references>
      </memberdef>
      <memberdef kind="function" id="group___d_r_i_v_e_r_s_1gacb825f2fd99c3044d012a9b25608cc18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
        <definition>u8 mpu_dmp_get_data</definition>
        <argsstring>(float *pitch, float *roll, float *yaw)</argsstring>
        <name>mpu_dmp_get_data</name>
        <param>
          <type>float *</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" line="2970" column="4" bodyfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.c" bodystart="2970" bodyend="2999" declfile="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h" declline="137" declcolumn="4"/>
        <references refid="group___d_r_i_v_e_r_s_1ga02db5f25359abe84be002c543cdc3803" compoundref="inv__mpu__dmp__motion__driver_8c" startline="1268" endline="1347">dmp_read_fifo</references>
        <references refid="group___d_r_i_v_e_r_s_1ga3d79cffe845a796a27d03432a1f2ade0" compoundref="inv__mpu__dmp__motion__driver_8h" startline="50">INV_WXYZ_QUAT</references>
        <references refid="group___d_r_i_v_e_r_s_1ga0c2ff73765f99e113d4f99826f9601e5" compoundref="inv__mpu_8c" startline="2865">q30</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An I2C-based driver for Invensense gyroscopes. </para>
    </briefdescription>
    <detaileddescription>
<para>This driver currently works for the following devices: MPU6050 MPU6500 MPU9150 (or MPU6050 w/ AK8975 on the auxiliary bus) MPU9250 (or MPU6500 w/ AK8963 on the auxiliary bus) </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>$License:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2011-2012<sp/>InvenSense<sp/>Corporation,<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>included<sp/>License.txt<sp/>for<sp/>License<sp/>information.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>$</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_INV_MPU_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_INV_MPU_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="varint_8h" kindref="compound">varint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//定义输出速度</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group___d_r_i_v_e_r_s_1ga292d717406e906831952ce46612fe4cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_MPU_HZ<sp/><sp/>(100)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//100Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group___d_r_i_v_e_r_s_1gabf02bf28541421d59f8be764f2b95407" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_X_GYRO<sp/><sp/><sp/><sp/><sp/><sp/>(0x40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group___d_r_i_v_e_r_s_1gacdd8ff833a34dba08ca2aa145eb92b44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_Y_GYRO<sp/><sp/><sp/><sp/><sp/><sp/>(0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group___d_r_i_v_e_r_s_1ga50205b5cc6089b33b2561c854eb8b0fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_Z_GYRO<sp/><sp/><sp/><sp/><sp/><sp/>(0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group___d_r_i_v_e_r_s_1ga3fdc30f9c0a26c2c4e2bb88921f91629" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_XYZ_GYRO<sp/><sp/><sp/><sp/>(INV_X_GYRO<sp/>|<sp/>INV_Y_GYRO<sp/>|<sp/>INV_Z_GYRO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group___d_r_i_v_e_r_s_1gaa03f025a17ed491e70b88274e89c75c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_XYZ_ACCEL<sp/><sp/><sp/>(0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group___d_r_i_v_e_r_s_1ga7fc9c1dbdcb2ac8cc2a4128a5799482a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INV_XYZ_COMPASS<sp/>(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//移植官方MSP430<sp/>DMP驱动过来</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structint__param__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structint__param__s" kindref="compound">int_param_s</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined<sp/>EMPL_TARGET_MSP430<sp/>||<sp/>defined<sp/>MOTION_DRIVER_TARGET_MSP430</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group___d_r_i_v_e_r_s_1ga97093754f1f13b06492990e3da77965d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="group___d_r_i_v_e_r_s_1ga97093754f1f13b06492990e3da77965d" kindref="member">cb</ref>)(void);</highlight></codeline>
<codeline lineno="40" refid="group___d_r_i_v_e_r_s_1ga5c682e1b664acf566f985b48dd7acbb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga5c682e1b664acf566f985b48dd7acbb7" kindref="member">pin</ref>;</highlight></codeline>
<codeline lineno="41" refid="group___d_r_i_v_e_r_s_1ga46dfad5a278a8b40a68d71beca0d2be4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga46dfad5a278a8b40a68d71beca0d2be4" kindref="member">lp_exit</ref>;</highlight></codeline>
<codeline lineno="42" refid="group___d_r_i_v_e_r_s_1ga9b859a3332d9bd9287d5766494f261fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga9b859a3332d9bd9287d5766494f261fb" kindref="member">active_low</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//#elif<sp/>defined<sp/>EMPL_TARGET_UC3L0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>pin;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>(*cb)(volatile<sp/>void*);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>*arg;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group___d_r_i_v_e_r_s_1ga0cddf0dffaf3bf65fd3ed92dda4f3193" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DATA_READY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group___d_r_i_v_e_r_s_1ga380dd1ef256931e99302c371ad7752f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group___d_r_i_v_e_r_s_1gaa38d7976e86186bf353cb89ca7561f29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_PLL_READY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group___d_r_i_v_e_r_s_1ga5755e84f3a2e7d331f7612dbfea18ecc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_I2C_MST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group___d_r_i_v_e_r_s_1gaf8e1684698ad837d0318a72b1ef73b13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_FIFO_OVERFLOW<sp/><sp/><sp/><sp/>(0x0010)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group___d_r_i_v_e_r_s_1gad5eee7ff393f842ca4ae969cc0019030" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_ZMOT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0020)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group___d_r_i_v_e_r_s_1gaa1ab51fb5995e568edd425f8486cb2c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_MOT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group___d_r_i_v_e_r_s_1ga000cfa5230cb895c6bad322856465552" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_FREE_FALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0080)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___d_r_i_v_e_r_s_1ga2398e82f93220e3cfa1ef31bfb6d76bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group___d_r_i_v_e_r_s_1ga5ac2e94db5083456fa531fceee0997f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group___d_r_i_v_e_r_s_1gab7543433b9679174597e00e5d7cb6279" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group___d_r_i_v_e_r_s_1gaea5cac4528bb19757de4eb4fa46a374f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0800)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group___d_r_i_v_e_r_s_1ga4345dc987e1b65ef8ddc6160f592e144" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group___d_r_i_v_e_r_s_1ga101643480b83c302a4a3089fe9149e8e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_INT_STATUS_DMP_5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gac48a36b51e23bc4191ec13916bbb9d0b" kindref="member">mpu_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67" refid="group___d_r_i_v_e_r_s_1ga9093183fe619360b3b1bfb8aab030592" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga9093183fe619360b3b1bfb8aab030592" kindref="member">mpu_init_slave</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga36f70f38371b48d81094d3b061233e15" kindref="member">mpu_set_bypass</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bypass_on);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Configuration<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga3a4fea75686ab7d2e68634e81ccac04c" kindref="member">mpu_lp_accel_mode</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rate);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga7d0b3259346898ccd1ba6ef78bf7df97" kindref="member">mpu_lp_motion_interrupt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>thresh,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>time,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lpa_freq);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gacc92fb1489ef32a04bcb6b0ebde4d657" kindref="member">mpu_set_int_level</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>active_low);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga653cb855300bff9285ce4b8dca6a503b" kindref="member">mpu_set_int_latched</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga68ed20e6c9663cd7c50469329af8715f" kindref="member">mpu_set_dmp_state</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gafe0f60ed0d7f8fd2dcd55d45b95a2363" kindref="member">mpu_get_dmp_state</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enabled);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gaa95c7e216dcb2d888e9796001ca555f8" kindref="member">mpu_get_lpf</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*lpf);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga5661a9dee25152166769910767a2a93d" kindref="member">mpu_set_lpf</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>lpf);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gaf973c32c73ba912ff512aab948fc31ca" kindref="member">mpu_get_gyro_fsr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*fsr);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gad09e6031c8677adc0b8a39b6deea8e27" kindref="member">mpu_set_gyro_fsr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>fsr);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gab6087a15ee23db23b6aec41590329a60" kindref="member">mpu_get_accel_fsr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fsr);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga2713a96af104cfb2ae8e0ed4c3718119" kindref="member">mpu_set_accel_fsr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fsr);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gade8589573d09e0f14b84130428f286df" kindref="member">mpu_get_compass_fsr</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*fsr);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga023c0cc94aa8f162dc33b15048a49421" kindref="member">mpu_get_gyro_sens</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sens);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga620408949052b96e856cad920f856583" kindref="member">mpu_get_accel_sens</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*sens);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga2487dd551b701c1c7ed4d6335f02b2f1" kindref="member">mpu_get_sample_rate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*rate);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga0144d666a67a82888b8580002afe8b55" kindref="member">mpu_set_sample_rate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>rate);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gab5a45cd7783f6937788c0decb0b18b16" kindref="member">mpu_get_compass_sample_rate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*rate);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga78da3828de0ef9d080c4d03e7bc45e7b" kindref="member">mpu_set_compass_sample_rate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>rate);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga093f11eb10b2639a4b9fe344ea348c54" kindref="member">mpu_get_fifo_config</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sensors);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gababbdda287e1f19323489f90a0889dd7" kindref="member">mpu_configure_fifo</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sensors);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gaec8fa7a067988d174516bb735a4a0bc9" kindref="member">mpu_get_power_state</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*power_on);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga6e77e7cc1cf6be5e8fdf617c5b4586d1" kindref="member">mpu_set_sensors</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sensors);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga4968cc2ec80f0da0d72436551c81f134" kindref="member">mpu_set_accel_bias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*accel_bias);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Data<sp/>getter/setter<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga5555854590ad11495c0e30401294bae2" kindref="member">mpu_get_gyro_reg</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*timestamp);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gae4ae960e5df78049ece2647772a3d809" kindref="member">mpu_get_accel_reg</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*timestamp);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga65e6b0ce980b8c0255d7be9b55c88c08" kindref="member">mpu_get_compass_reg</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*timestamp);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gaa449b565a157b4b8ca0f491b7ed46018" kindref="member">mpu_get_temperature</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*timestamp);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga0afd02d8c76d3278b488ef7038c26e3e" kindref="member">mpu_get_int_status</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*status);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga2da20453aafbbba4a0f6fb9fbdd25572" kindref="member">mpu_read_fifo</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*gyro,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*accel,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*timestamp,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sensors,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*more);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga13593044949b460e9f571eb57e9a0788" kindref="member">mpu_read_fifo_stream</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*more);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gaf23e9f57c0059be6ec57862f0584de10" kindref="member">mpu_reset_fifo</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gafea59910bc3dd30ba3356b1c75213a5f" kindref="member">mpu_write_mem</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>mem_addr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga3374bececb6743893c9eab27645c1182" kindref="member">mpu_read_mem</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>mem_addr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga8fbdfe1a50285d4ab438e29c2efc70f5" kindref="member">mpu_load_firmware</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*firmware,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>start_addr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>sample_rate);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga0e1201ecfd8453f1d89e4299528baaf6" kindref="member">mpu_reg_dump</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga5c35a3363337014e11769a0ea7c0dfa9" kindref="member">mpu_read_reg</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga5448c351fc95ff052b110eee80e5f75c" kindref="member">reg</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga3773dc98eb1ba15da0091ae75abcf62f" kindref="member">mpu_run_self_test</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*gyro,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*accel);</highlight></codeline>
<codeline lineno="130" refid="group___d_r_i_v_e_r_s_1ga0d528114a4e355a10ffd354a4c89a17f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga0d528114a4e355a10ffd354a4c89a17f" kindref="member">mpu_register_tap_cb</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//自行添加的一些函数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1gafa3071c8321f6e8dd2036be8a1e57ad0" kindref="member">mget_ms</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*time);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga2b58dae1c0567f3f9f6dcbfb07476de7" kindref="member">inv_row_2_scale</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*row);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group___d_r_i_v_e_r_s_1ga3ff6037a69f37bb6174355936ad67ef3" kindref="member">inv_orientation_matrix_to_scalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mtx);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref><sp/><ref refid="group___d_r_i_v_e_r_s_1gaff893f93277595387023c71d46b03c42" kindref="member">run_self_test</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref><sp/><ref refid="group___d_r_i_v_e_r_s_1gafac8fcbf24cfa1b69737e02238580f3a" kindref="member">mpu_dmp_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="varint_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref><sp/><ref refid="group___d_r_i_v_e_r_s_1gacb825f2fd99c3044d012a9b25608cc18" kindref="member">mpu_dmp_get_data</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pitch,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*roll,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*yaw);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>_INV_MPU_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/gitt/MicrochipFor32/bsp_MPU6050/inv_mpu.h"/>
  </compounddef>
</doxygen>
